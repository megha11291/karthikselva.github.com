<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Algorithms | random software geek]]></title>
  <link href="http://karthikselva.in/blog/categories/algorithms/atom.xml" rel="self"/>
  <link href="http://karthikselva.in/"/>
  <updated>2014-09-03T09:13:07+05:30</updated>
  <id>http://karthikselva.in/</id>
  <author>
    <name><![CDATA[karthikselva]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Linked List - Append alternate nodes at the end]]></title>
    <link href="http://karthikselva.in/blog/2014/09/03/append-alternate-nodes-at-the-end-linked-list/"/>
    <updated>2014-09-03T09:10:00+05:30</updated>
    <id>http://karthikselva.in/blog/2014/09/03/append-alternate-nodes-at-the-end-linked-list</id>
    <content type="html"><![CDATA[<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>AlternateAppendLinkedList (alternate_append.rb)</span> <a href='/downloads/code/alternate_append.rb'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="k">class</span> <span class="nc">List</span>
</span><span class='line'>	<span class="kp">attr_accessor</span> <span class="ss">:data</span><span class="p">,</span> <span class="ss">:next</span>
</span><span class='line'>	<span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">d</span><span class="p">,</span><span class="n">n</span><span class="p">)</span>
</span><span class='line'>		<span class="vi">@data</span> <span class="o">=</span> <span class="n">d</span>
</span><span class='line'>		<span class="vi">@next</span> <span class="o">=</span> <span class="n">n</span>
</span><span class='line'>	<span class="k">end</span>
</span><span class='line'>
</span><span class='line'>	<span class="k">def</span> <span class="nf">display</span>
</span><span class='line'>		<span class="n">tmp</span> <span class="o">=</span> <span class="nb">self</span>
</span><span class='line'>		<span class="k">while</span> <span class="o">!</span><span class="n">tmp</span><span class="o">.</span><span class="n">nil?</span>
</span><span class='line'>			<span class="nb">print</span> <span class="s2">&quot; </span><span class="si">#{</span><span class="n">tmp</span><span class="o">.</span><span class="n">data</span><span class="si">}</span><span class="s2"> -&gt; &quot;</span>
</span><span class='line'>			<span class="n">tmp</span> <span class="o">=</span> <span class="n">tmp</span><span class="o">.</span><span class="n">next</span>
</span><span class='line'>		<span class="k">end</span>
</span><span class='line'>		<span class="nb">print</span> <span class="s2">&quot; END </span><span class="se">\n</span><span class="s2">&quot;</span>
</span><span class='line'>	<span class="k">end</span>
</span><span class='line'>
</span><span class='line'>	<span class="k">def</span> <span class="nf">delete</span>
</span><span class='line'>		<span class="k">if</span> <span class="nb">self</span><span class="o">.</span><span class="n">next</span>
</span><span class='line'>			<span class="nb">self</span><span class="o">.</span><span class="n">data</span> <span class="o">=</span> <span class="nb">self</span><span class="o">.</span><span class="n">next</span><span class="o">.</span><span class="n">data</span>
</span><span class='line'>			<span class="nb">self</span><span class="o">.</span><span class="n">next</span> <span class="o">=</span> <span class="nb">self</span><span class="o">.</span><span class="n">next</span><span class="o">.</span><span class="n">next</span>
</span><span class='line'>		<span class="k">end</span>
</span><span class='line'>	<span class="k">end</span>
</span><span class='line'>
</span><span class='line'>	<span class="c1"># Uses stack</span>
</span><span class='line'>	<span class="k">def</span> <span class="nf">altrev</span>
</span><span class='line'>		<span class="n">h</span> <span class="o">=</span> <span class="nb">self</span>
</span><span class='line'>		<span class="n">st</span> <span class="o">=</span> <span class="o">[]</span>
</span><span class='line'>		<span class="n">c</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>		<span class="k">while</span> <span class="o">!</span><span class="n">h</span><span class="o">.</span><span class="n">next</span><span class="o">.</span><span class="n">nil?</span>
</span><span class='line'>			<span class="k">if</span> <span class="n">c</span><span class="o">%</span><span class="mi">2</span> <span class="o">==</span> <span class="mi">1</span>
</span><span class='line'>				<span class="n">st</span><span class="o">.</span><span class="n">push</span><span class="p">(</span><span class="n">h</span><span class="o">.</span><span class="n">data</span><span class="p">)</span>
</span><span class='line'>				<span class="n">h</span><span class="o">.</span><span class="n">delete</span>
</span><span class='line'>			<span class="k">else</span>
</span><span class='line'>				<span class="n">h</span> <span class="o">=</span> <span class="n">h</span><span class="o">.</span><span class="n">next</span>
</span><span class='line'>			<span class="k">end</span>
</span><span class='line'>			<span class="n">c</span> <span class="o">+=</span> <span class="mi">1</span>
</span><span class='line'>		<span class="k">end</span>
</span><span class='line'>
</span><span class='line'>		<span class="n">d</span> <span class="o">=</span> <span class="kp">nil</span>
</span><span class='line'>		<span class="k">while</span> <span class="p">(</span><span class="n">d</span> <span class="o">=</span> <span class="n">st</span><span class="o">.</span><span class="n">pop</span><span class="p">)</span>
</span><span class='line'>			<span class="n">h</span><span class="o">.</span><span class="n">next</span> <span class="o">=</span> <span class="no">List</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">d</span><span class="p">,</span><span class="kp">nil</span><span class="p">)</span>
</span><span class='line'>			<span class="n">h</span> <span class="o">=</span> <span class="n">h</span><span class="o">.</span><span class="n">next</span>
</span><span class='line'>		<span class="k">end</span>
</span><span class='line'>	<span class="k">end</span>
</span><span class='line'>
</span><span class='line'>	<span class="c1"># Stimulates a stack with &#39;even&#39; pointer</span>
</span><span class='line'>	<span class="k">def</span> <span class="nf">altrev_p</span>
</span><span class='line'>		<span class="n">h</span> <span class="o">=</span> <span class="nb">self</span>
</span><span class='line'>		<span class="n">even</span> <span class="o">=</span> <span class="kp">nil</span>
</span><span class='line'>		<span class="n">c</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>		<span class="k">while</span> <span class="o">!</span><span class="n">h</span><span class="o">.</span><span class="n">next</span><span class="o">.</span><span class="n">nil?</span>
</span><span class='line'>			<span class="k">if</span> <span class="n">c</span><span class="o">%</span><span class="mi">2</span> <span class="o">==</span> <span class="mi">0</span>
</span><span class='line'>				<span class="n">tmp</span> <span class="o">=</span> <span class="n">h</span><span class="o">.</span><span class="n">next</span>
</span><span class='line'>				<span class="n">h</span><span class="o">.</span><span class="n">next</span> <span class="o">=</span> <span class="n">h</span><span class="o">.</span><span class="n">next</span><span class="o">.</span><span class="n">next</span>
</span><span class='line'>				<span class="k">if</span> <span class="n">even</span><span class="o">.</span><span class="n">nil?</span>
</span><span class='line'>					<span class="n">even</span> <span class="o">=</span> <span class="n">tmp</span>
</span><span class='line'>					<span class="n">even</span><span class="o">.</span><span class="n">next</span> <span class="o">=</span> <span class="kp">nil</span>
</span><span class='line'>				<span class="k">else</span>
</span><span class='line'>					<span class="n">tmp</span><span class="o">.</span><span class="n">next</span> <span class="o">=</span> <span class="n">even</span>
</span><span class='line'>					<span class="n">even</span> <span class="o">=</span> <span class="n">tmp</span>
</span><span class='line'>				<span class="k">end</span>
</span><span class='line'>			<span class="k">else</span>
</span><span class='line'>				<span class="n">h</span> <span class="o">=</span> <span class="n">h</span><span class="o">.</span><span class="n">next</span>
</span><span class='line'>			<span class="k">end</span>
</span><span class='line'>			<span class="n">c</span> <span class="o">+=</span> <span class="mi">1</span>
</span><span class='line'>		<span class="k">end</span>
</span><span class='line'>		<span class="n">h</span><span class="o">.</span><span class="n">next</span> <span class="o">=</span> <span class="n">even</span>
</span><span class='line'>	<span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">l</span> <span class="o">=</span> <span class="no">List</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="no">List</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="no">List</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="no">List</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="no">List</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span><span class="no">List</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="mi">6</span><span class="p">,</span><span class="kp">nil</span><span class="p">))))))</span>
</span><span class='line'><span class="n">l</span><span class="o">.</span><span class="n">display</span>
</span><span class='line'><span class="n">l</span><span class="o">.</span><span class="n">altrev_p</span>
</span><span class='line'><span class="n">l</span><span class="o">.</span><span class="n">display</span>
</span><span class='line'>
</span><span class='line'><span class="n">l</span> <span class="o">=</span> <span class="no">List</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="mi">12</span><span class="p">,</span><span class="no">List</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="mi">14</span><span class="p">,</span><span class="no">List</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="mi">16</span><span class="p">,</span><span class="no">List</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="mi">18</span><span class="p">,</span><span class="no">List</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="mi">20</span><span class="p">,</span><span class="kp">nil</span><span class="p">)))))</span>
</span><span class='line'><span class="n">l</span><span class="o">.</span><span class="n">display</span>
</span><span class='line'><span class="n">l</span><span class="o">.</span><span class="n">altrev_p</span>
</span><span class='line'><span class="n">l</span><span class="o">.</span><span class="n">display</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Arrays - Finding kth smallest element in two sorted arrays]]></title>
    <link href="http://karthikselva.in/blog/2014/07/28/arrays-finding-kth-smallest-element-in-two-sorted-arrays/"/>
    <updated>2014-07-28T20:25:00+05:30</updated>
    <id>http://karthikselva.in/blog/2014/07/28/arrays-finding-kth-smallest-element-in-two-sorted-arrays</id>
    <content type="html"><![CDATA[<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>KthSmallest (kth_smallest.rb)</span> <a href='/downloads/code/kth_smallest.rb'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="k">class</span> <span class="nc">Arrays</span>
</span><span class='line'>	<span class="kp">attr_accessor</span> <span class="ss">:arr1</span><span class="p">,</span> <span class="ss">:arr2</span>
</span><span class='line'>
</span><span class='line'>	<span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">arr1</span><span class="p">,</span><span class="n">arr2</span><span class="p">)</span>
</span><span class='line'>		<span class="vi">@arr1</span> <span class="o">=</span> <span class="n">arr1</span>
</span><span class='line'>		<span class="vi">@arr2</span> <span class="o">=</span> <span class="n">arr2</span>
</span><span class='line'>	<span class="k">end</span>
</span><span class='line'>
</span><span class='line'>	<span class="k">def</span> <span class="nf">find_kth_smallest</span><span class="p">(</span><span class="n">k</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>		<span class="n">len_arr1</span> <span class="o">=</span> <span class="vi">@arr1</span><span class="o">.</span><span class="n">length</span>
</span><span class='line'>		<span class="n">len_arr2</span> <span class="o">=</span> <span class="vi">@arr2</span><span class="o">.</span><span class="n">length</span>
</span><span class='line'>
</span><span class='line'>		<span class="n">tot</span> <span class="o">=</span> <span class="p">(</span><span class="n">len_arr1</span> <span class="o">+</span> <span class="n">len_arr2</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>		<span class="k">if</span> <span class="n">k</span> <span class="o">&gt;=</span> <span class="n">tot</span>
</span><span class='line'>			<span class="k">return</span> <span class="o">-</span><span class="mi">1</span>
</span><span class='line'>		<span class="k">else</span>
</span><span class='line'>			<span class="n">i</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>			<span class="n">j</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>			<span class="n">k_cur</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>			<span class="n">t</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span>
</span><span class='line'>			<span class="k">while</span> <span class="n">k_cur</span> <span class="o">&lt;</span> <span class="n">tot</span>
</span><span class='line'>				<span class="k">if</span> <span class="n">k_cur</span> <span class="o">&gt;</span> <span class="n">k</span>
</span><span class='line'>					<span class="k">return</span> <span class="n">t</span>
</span><span class='line'>				<span class="k">end</span>
</span><span class='line'>				<span class="k">if</span> <span class="p">(</span><span class="n">i</span> <span class="o">&lt;</span> <span class="n">len_arr1</span> <span class="ow">and</span> <span class="vi">@arr1</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">&lt;</span> <span class="vi">@arr2</span><span class="o">[</span><span class="n">j</span><span class="o">]</span><span class="p">)</span> <span class="ow">or</span> <span class="n">j</span> <span class="o">==</span> <span class="n">len_arr2</span>
</span><span class='line'>					<span class="n">t</span> <span class="o">=</span> <span class="vi">@arr1</span><span class="o">[</span><span class="n">i</span><span class="o">]</span>
</span><span class='line'>					<span class="n">i</span> <span class="o">=</span> <span class="n">i</span><span class="o">+</span><span class="mi">1</span>
</span><span class='line'>				<span class="k">elsif</span> <span class="p">(</span><span class="n">j</span> <span class="o">&lt;</span> <span class="n">len_arr2</span><span class="p">)</span> <span class="ow">or</span> <span class="n">len_arr1</span> <span class="o">==</span> <span class="n">i</span>
</span><span class='line'>					<span class="n">t</span> <span class="o">=</span> <span class="vi">@arr2</span><span class="o">[</span><span class="n">j</span><span class="o">]</span>
</span><span class='line'>					<span class="n">j</span> <span class="o">=</span> <span class="n">j</span><span class="o">+</span><span class="mi">1</span>
</span><span class='line'>				<span class="k">end</span>
</span><span class='line'>				
</span><span class='line'>				<span class="n">k_cur</span> <span class="o">=</span> <span class="n">i</span> <span class="o">+</span> <span class="n">j</span>
</span><span class='line'>			<span class="k">end</span>
</span><span class='line'>			<span class="k">return</span> <span class="n">t</span>
</span><span class='line'>		<span class="k">end</span>
</span><span class='line'>	<span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">method</span><span class="p">(</span><span class="n">arr</span><span class="p">)</span>
</span><span class='line'>	<span class="n">arr</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">e</span><span class="o">|</span>
</span><span class='line'>		<span class="n">arr</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">f</span><span class="o">|</span>
</span><span class='line'>			<span class="nb">puts</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">e</span><span class="si">}#{</span><span class="n">f</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>		<span class="k">end</span>
</span><span class='line'>	<span class="k">end</span>
</span><span class='line'>	
</span><span class='line'>	<span class="n">arr</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">g</span><span class="o">|</span>
</span><span class='line'>		<span class="nb">puts</span> <span class="n">g</span>
</span><span class='line'>	<span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">arrs</span> <span class="o">=</span> <span class="no">Arrays</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="o">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">7</span><span class="o">]</span><span class="p">,</span><span class="o">[</span><span class="mi">2</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">6</span><span class="p">,</span><span class="mi">8</span><span class="p">,</span><span class="mi">9</span><span class="p">,</span><span class="mi">10</span><span class="p">,</span><span class="mi">11</span><span class="p">,</span><span class="mi">12</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">14</span><span class="p">,</span><span class="mi">15</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="n">arrs</span><span class="o">.</span><span class="n">find_kth_smallest</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span> <span class="c1"># =&gt;  2</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="n">arrs</span><span class="o">.</span><span class="n">find_kth_smallest</span><span class="p">(</span><span class="mi">5</span><span class="p">)</span> <span class="c1"># =&gt; 6</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="n">arrs</span><span class="o">.</span><span class="n">find_kth_smallest</span><span class="p">(</span><span class="mi">3</span><span class="p">)</span> <span class="c1"># =&gt; 4</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="n">arrs</span><span class="o">.</span><span class="n">find_kth_smallest</span><span class="p">(</span><span class="mi">15</span><span class="p">)</span> <span class="c1"># =&gt; -1</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="n">arrs</span><span class="o">.</span><span class="n">find_kth_smallest</span><span class="p">(</span><span class="mi">14</span><span class="p">)</span> <span class="c1"># =&gt; 10</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Numbers - Check if a number is palindrome (No extra space)]]></title>
    <link href="http://karthikselva.in/blog/2014/07/28/check-if-a-number-is-palindrome/"/>
    <updated>2014-07-28T19:56:00+05:30</updated>
    <id>http://karthikselva.in/blog/2014/07/28/check-if-a-number-is-palindrome</id>
    <content type="html"><![CDATA[<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>NumberPalindrome (number_is_palindrome.rb)</span> <a href='/downloads/code/number_is_palindrome.rb'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="k">class</span> <span class="nc">Number</span>
</span><span class='line'>	<span class="kp">attr_accessor</span> <span class="ss">:num</span>
</span><span class='line'>
</span><span class='line'>	<span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">num</span><span class="p">)</span>
</span><span class='line'>		<span class="vi">@num</span> <span class="o">=</span> <span class="n">num</span>
</span><span class='line'>	<span class="k">end</span>
</span><span class='line'>
</span><span class='line'>	<span class="k">def</span> <span class="nf">is_palindrome?</span>
</span><span class='line'>		<span class="n">div</span> <span class="o">=</span> <span class="mi">1</span>
</span><span class='line'>		<span class="n">t</span> <span class="o">=</span> <span class="vi">@num</span>
</span><span class='line'>		
</span><span class='line'>		<span class="k">while</span> <span class="n">t</span> <span class="o">&gt;</span> <span class="mi">10</span>
</span><span class='line'>			<span class="n">div</span> <span class="o">=</span> <span class="n">div</span><span class="o">*</span><span class="mi">10</span>
</span><span class='line'>			<span class="n">t</span> <span class="o">=</span> <span class="n">t</span><span class="o">/</span><span class="mi">10</span>
</span><span class='line'>		<span class="k">end</span>
</span><span class='line'>
</span><span class='line'>		<span class="n">t</span> <span class="o">=</span> <span class="vi">@num</span>
</span><span class='line'>
</span><span class='line'>		<span class="k">while</span> <span class="n">t</span> <span class="o">&gt;</span> <span class="mi">10</span>
</span><span class='line'>			<span class="n">l</span> <span class="o">=</span> <span class="n">t</span><span class="o">/</span><span class="n">div</span>
</span><span class='line'>			<span class="n">r</span> <span class="o">=</span> <span class="n">t</span><span class="o">%</span><span class="mi">10</span>
</span><span class='line'>			<span class="k">if</span> <span class="n">l</span> <span class="o">!=</span> <span class="n">r</span>
</span><span class='line'>				<span class="k">return</span> <span class="kp">false</span>
</span><span class='line'>			<span class="k">end</span>
</span><span class='line'>			<span class="n">t</span> <span class="o">=</span> <span class="p">(</span><span class="n">t</span><span class="o">%</span><span class="n">div</span><span class="p">)</span><span class="o">/</span><span class="mi">10</span>
</span><span class='line'>			<span class="n">div</span> <span class="o">=</span> <span class="n">div</span><span class="o">/</span><span class="mi">100</span>
</span><span class='line'>		<span class="k">end</span>
</span><span class='line'>
</span><span class='line'>		<span class="k">return</span> <span class="kp">true</span>
</span><span class='line'>	<span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">n</span> <span class="o">=</span> <span class="no">Number</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="mi">12321</span><span class="p">)</span>
</span><span class='line'><span class="nb">puts</span> <span class="n">n</span><span class="o">.</span><span class="n">is_palindrome?</span> <span class="c1"># Odd palindrome =&gt; true</span>
</span><span class='line'>
</span><span class='line'><span class="n">n</span> <span class="o">=</span> <span class="no">Number</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="mi">123321</span><span class="p">)</span>
</span><span class='line'><span class="nb">puts</span> <span class="n">n</span><span class="o">.</span><span class="n">is_palindrome?</span> <span class="c1"># Even Palindrome =&gt; true</span>
</span><span class='line'>
</span><span class='line'><span class="n">n</span> <span class="o">=</span> <span class="no">Number</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="mi">123212</span><span class="p">)</span>
</span><span class='line'><span class="nb">puts</span> <span class="n">n</span><span class="o">.</span><span class="n">is_palindrome?</span> <span class="c1"># Not a Palindrome =&gt; false</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Dynamic Programming - Longest Common Subsequence two strings]]></title>
    <link href="http://karthikselva.in/blog/2014/07/27/dynamic-programming-longest-common-subsequence-two-strings/"/>
    <updated>2014-07-27T18:37:00+05:30</updated>
    <id>http://karthikselva.in/blog/2014/07/27/dynamic-programming-longest-common-subsequence-two-strings</id>
    <content type="html"><![CDATA[<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>LCS (longest_common_subsequence.rb)</span> <a href='/downloads/code/longest_common_subsequence.rb'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="k">class</span> <span class="nc">Patternizer</span>
</span><span class='line'>	<span class="kp">attr_accessor</span> <span class="ss">:str1</span><span class="p">,</span> <span class="ss">:str2</span><span class="p">,</span> <span class="ss">:mat</span>
</span><span class='line'>
</span><span class='line'>	<span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">str1</span><span class="p">,</span><span class="n">str2</span><span class="p">)</span>
</span><span class='line'>		<span class="vi">@str1</span> <span class="o">=</span> <span class="n">str1</span>
</span><span class='line'>		<span class="vi">@str2</span> <span class="o">=</span> <span class="n">str2</span>
</span><span class='line'>		<span class="vi">@mat</span> <span class="o">=</span> <span class="o">[]</span>
</span><span class='line'>	<span class="k">end</span>
</span><span class='line'>
</span><span class='line'>	<span class="k">def</span> <span class="nf">p_mat</span>
</span><span class='line'>		<span class="p">(</span><span class="vi">@str1</span><span class="o">.</span><span class="n">length</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">.</span><span class="n">times</span> <span class="k">do</span> <span class="o">|</span><span class="n">i</span><span class="o">|</span>
</span><span class='line'>			<span class="p">(</span><span class="vi">@str2</span><span class="o">.</span><span class="n">length</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">.</span><span class="n">times</span> <span class="k">do</span> <span class="o">|</span><span class="n">j</span><span class="o">|</span>
</span><span class='line'>				<span class="nb">print</span> <span class="s2">&quot; </span><span class="si">#{</span><span class="vi">@mat</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">]</span><span class="si">}</span><span class="s2"> &quot;</span>
</span><span class='line'>			<span class="k">end</span>
</span><span class='line'>			<span class="nb">puts</span> <span class="s2">&quot;&quot;</span>
</span><span class='line'>		<span class="k">end</span>
</span><span class='line'>	<span class="k">end</span>
</span><span class='line'>
</span><span class='line'>	<span class="k">def</span> <span class="nf">lc_subsequence</span>
</span><span class='line'>		<span class="p">(</span><span class="vi">@str1</span><span class="o">.</span><span class="n">length</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">.</span><span class="n">times</span> <span class="k">do</span> <span class="o">|</span><span class="n">i</span><span class="o">|</span>
</span><span class='line'>			<span class="vi">@mat</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="o">[</span><span class="mi">0</span><span class="o">]*</span><span class="p">(</span><span class="vi">@str2</span><span class="o">.</span><span class="n">length</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'>		<span class="k">end</span>
</span><span class='line'>		
</span><span class='line'>		<span class="vi">@str1</span><span class="o">.</span><span class="n">length</span><span class="o">.</span><span class="n">times</span> <span class="k">do</span> <span class="o">|</span><span class="n">i</span><span class="o">|</span>
</span><span class='line'>			<span class="n">i</span> <span class="o">=</span> <span class="n">i</span> <span class="o">+</span> <span class="mi">1</span>
</span><span class='line'>			<span class="vi">@str2</span><span class="o">.</span><span class="n">length</span><span class="o">.</span><span class="n">times</span> <span class="k">do</span> <span class="o">|</span><span class="n">j</span><span class="o">|</span>
</span><span class='line'>				<span class="n">j</span> <span class="o">=</span> <span class="n">j</span> <span class="o">+</span> <span class="mi">1</span>
</span><span class='line'>				<span class="k">if</span> <span class="vi">@str1</span><span class="o">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="o">]</span> <span class="o">==</span> <span class="vi">@str2</span><span class="o">[</span><span class="n">j</span><span class="o">-</span><span class="mi">1</span><span class="o">]</span>
</span><span class='line'>					<span class="n">mat</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">]</span> <span class="o">=</span> <span class="mi">1</span> <span class="o">+</span> <span class="n">mat</span><span class="o">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="o">][</span><span class="n">j</span><span class="o">-</span><span class="mi">1</span><span class="o">]</span>
</span><span class='line'>				<span class="k">else</span>
</span><span class='line'>					<span class="n">mat</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">]</span> <span class="o">=</span> <span class="o">[</span><span class="n">mat</span><span class="o">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="o">][</span><span class="n">j</span><span class="o">]</span><span class="p">,</span><span class="n">mat</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">-</span><span class="mi">1</span><span class="o">]].</span><span class="n">max</span>
</span><span class='line'>				<span class="k">end</span>
</span><span class='line'>			<span class="k">end</span>
</span><span class='line'>		<span class="k">end</span>
</span><span class='line'>		<span class="n">p_mat</span>
</span><span class='line'>	<span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">pat</span> <span class="o">=</span> <span class="no">Patternizer</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s2">&quot;ABACEB&quot;</span><span class="p">,</span><span class="s2">&quot;ADBAVCEB&quot;</span><span class="p">)</span>
</span><span class='line'><span class="n">pat</span><span class="o">.</span><span class="n">lc_subsequence</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Output:</span>
</span><span class='line'><span class="c1"># ------- </span>
</span><span class='line'><span class="c1">#</span>
</span><span class='line'> <span class="c1"># 0  0  0  0  0  0  0  0  0</span>
</span><span class='line'> <span class="c1"># 0  1  1  1  1  1  1  1  1</span>
</span><span class='line'> <span class="c1"># 0  1  1  2  2  2  2  2  2</span>
</span><span class='line'> <span class="c1"># 0  1  1  2  3  3  3  3  3</span>
</span><span class='line'> <span class="c1"># 0  1  1  2  3  3  4  4  4</span>
</span><span class='line'> <span class="c1"># 0  1  1  2  3  3  4  5  5</span>
</span><span class='line'> <span class="c1"># 0  1  1  2  3  3  4  5  6</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Dynamic Programming - Cutting a Rod]]></title>
    <link href="http://karthikselva.in/blog/2014/07/26/dynamic-programming-cutting-a-rod/"/>
    <updated>2014-07-26T21:21:00+05:30</updated>
    <id>http://karthikselva.in/blog/2014/07/26/dynamic-programming-cutting-a-rod</id>
    <content type="html"><![CDATA[<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>CuttingRod (cutting_rod.rb)</span> <a href='/downloads/code/cutting_rod.rb'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="k">class</span> <span class="nc">Rod</span>
</span><span class='line'>	<span class="kp">attr_accessor</span> <span class="ss">:price_list</span><span class="p">,</span> <span class="ss">:cache</span>
</span><span class='line'>
</span><span class='line'>	<span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">price_list</span><span class="p">)</span>
</span><span class='line'>		<span class="vi">@price_list</span> <span class="o">=</span> <span class="n">price_list</span>
</span><span class='line'>		<span class="vi">@cache</span> <span class="o">=</span> <span class="p">{}</span>
</span><span class='line'>	<span class="k">end</span>
</span><span class='line'>
</span><span class='line'>	<span class="k">def</span> <span class="nf">cut</span><span class="p">(</span><span class="n">n</span><span class="p">)</span>
</span><span class='line'>		<span class="k">return</span> <span class="mi">0</span> <span class="k">if</span> <span class="n">n</span> <span class="o">&lt;</span> <span class="mi">1</span>
</span><span class='line'>		<span class="n">val</span> <span class="o">=</span> <span class="o">[]</span>
</span><span class='line'>		<span class="n">n</span><span class="o">.</span><span class="n">times</span> <span class="k">do</span> <span class="o">|</span><span class="n">i</span><span class="o">|</span>
</span><span class='line'>			<span class="n">i</span> <span class="o">=</span> <span class="n">i</span><span class="o">+</span><span class="mi">1</span>
</span><span class='line'>			<span class="k">if</span> <span class="vi">@cache</span><span class="o">[</span><span class="n">n</span><span class="o">-</span><span class="n">i</span><span class="o">].</span><span class="n">nil?</span>
</span><span class='line'>				<span class="n">val</span> <span class="o">&lt;&lt;</span> <span class="n">cut</span><span class="p">(</span><span class="n">n</span><span class="o">-</span><span class="n">i</span><span class="p">)</span> <span class="o">+</span> <span class="vi">@price_list</span><span class="o">[</span><span class="n">i</span><span class="o">]</span>
</span><span class='line'>			<span class="k">else</span>
</span><span class='line'>				<span class="n">val</span> <span class="o">&lt;&lt;</span> <span class="vi">@price_list</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">+</span> <span class="vi">@cache</span><span class="o">[</span><span class="n">n</span><span class="o">-</span><span class="n">i</span><span class="o">]</span>
</span><span class='line'>			<span class="k">end</span>
</span><span class='line'>		<span class="k">end</span>
</span><span class='line'>		<span class="vi">@cache</span><span class="o">[</span><span class="n">n</span><span class="o">]</span> <span class="o">=</span> <span class="n">val</span><span class="o">.</span><span class="n">max</span>
</span><span class='line'>		<span class="k">return</span> <span class="vi">@cache</span><span class="o">[</span><span class="n">n</span><span class="o">]</span>
</span><span class='line'>	<span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">rd</span> <span class="o">=</span> <span class="no">Rod</span><span class="o">.</span><span class="n">new</span><span class="p">({</span>
</span><span class='line'>	<span class="mi">1</span> <span class="o">=&gt;</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span> <span class="o">=&gt;</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">3</span> <span class="o">=&gt;</span> <span class="mi">8</span><span class="p">,</span>
</span><span class='line'> 	<span class="mi">4</span> <span class="o">=&gt;</span> <span class="mi">9</span><span class="p">,</span> <span class="mi">5</span> <span class="o">=&gt;</span> <span class="mi">10</span><span class="p">,</span> <span class="mi">6</span> <span class="o">=&gt;</span> <span class="mi">17</span><span class="p">,</span>
</span><span class='line'> 	<span class="mi">7</span> <span class="o">=&gt;</span> <span class="mi">17</span><span class="p">,</span> <span class="mi">8</span> <span class="o">=&gt;</span> <span class="mi">20</span>
</span><span class='line'> 	<span class="p">})</span>
</span><span class='line'>
</span><span class='line'><span class="nb">p</span> <span class="n">rd</span><span class="o">.</span><span class="n">cut</span><span class="p">(</span><span class="mi">5</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Output: 13 # =&gt; 2 -&gt; 5, 3 -&gt; 8 = 8 + 5 =&gt; 13</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>
]]></content>
  </entry>
  
</feed>
