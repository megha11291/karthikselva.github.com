<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Algorithms | Hacker's Diary]]></title>
  <link href="http://karthikselva.github.com/blog/categories/algorithms/atom.xml" rel="self"/>
  <link href="http://karthikselva.github.com/"/>
  <updated>2013-05-05T23:22:51+05:30</updated>
  <id>http://karthikselva.github.com/</id>
  <author>
    <name><![CDATA[karthikselva's log]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Linked List - Loop detection and Removal]]></title>
    <link href="http://karthikselva.github.com/blog/2013/05/05/linked-list-loop-detection-and-removal/"/>
    <updated>2013-05-05T23:18:00+05:30</updated>
    <id>http://karthikselva.github.com/blog/2013/05/05/linked-list-loop-detection-and-removal</id>
    <content type="html"><![CDATA[<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>LoopInList ruby (loop_in_list.rb)</span> <a href='/downloads/code/loop_in_list.rb'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="k">class</span> <span class="nc">List</span>
</span><span class='line'>	<span class="kp">attr_accessor</span> <span class="ss">:next</span> <span class="p">,</span> <span class="ss">:data</span>
</span><span class='line'>	<span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">d</span><span class="p">)</span>
</span><span class='line'>		<span class="nb">self</span><span class="o">.</span><span class="n">data</span> <span class="o">=</span> <span class="n">d</span>
</span><span class='line'>	<span class="k">end</span>
</span><span class='line'>
</span><span class='line'>	<span class="k">def</span> <span class="nf">has_loop</span>
</span><span class='line'>		<span class="n">hare</span><span class="p">,</span><span class="n">tortoise</span> <span class="o">=</span> <span class="nb">self</span><span class="p">,</span><span class="nb">self</span>
</span><span class='line'>		<span class="k">while</span> <span class="o">!</span><span class="n">hare</span><span class="o">.</span><span class="n">nil?</span> <span class="ow">and</span> <span class="o">!</span><span class="n">hare</span><span class="o">.</span><span class="n">next</span><span class="o">.</span><span class="n">nil?</span>
</span><span class='line'>			<span class="n">tortoise</span> <span class="o">=</span> <span class="n">tortoise</span><span class="o">.</span><span class="n">next</span>
</span><span class='line'>			<span class="n">hare</span> <span class="o">=</span> <span class="n">hare</span><span class="o">.</span><span class="n">next</span><span class="o">.</span><span class="n">next</span>
</span><span class='line'>			<span class="k">if</span> <span class="n">hare</span><span class="o">.</span><span class="n">eql?</span><span class="p">(</span><span class="n">tortoise</span><span class="p">)</span>
</span><span class='line'>				<span class="k">return</span> <span class="kp">true</span>
</span><span class='line'>			<span class="k">end</span>
</span><span class='line'>		<span class="k">end</span>
</span><span class='line'>		<span class="k">return</span> <span class="kp">false</span>
</span><span class='line'>	<span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">remove_loop</span>
</span><span class='line'>  	<span class="n">hare</span><span class="p">,</span><span class="n">tortoise</span> <span class="o">=</span> <span class="nb">self</span><span class="p">,</span><span class="nb">self</span>
</span><span class='line'>		<span class="k">while</span> <span class="o">!</span><span class="n">hare</span><span class="o">.</span><span class="n">nil?</span> <span class="ow">and</span> <span class="o">!</span><span class="n">hare</span><span class="o">.</span><span class="n">next</span><span class="o">.</span><span class="n">nil?</span>
</span><span class='line'>			<span class="n">tortoise</span> <span class="o">=</span> <span class="n">tortoise</span><span class="o">.</span><span class="n">next</span>
</span><span class='line'>			<span class="n">hare</span> <span class="o">=</span> <span class="n">hare</span><span class="o">.</span><span class="n">next</span><span class="o">.</span><span class="n">next</span>
</span><span class='line'>			<span class="k">if</span> <span class="n">hare</span><span class="o">.</span><span class="n">eql?</span><span class="p">(</span><span class="n">tortoise</span><span class="p">)</span>
</span><span class='line'>				<span class="k">break</span>
</span><span class='line'>			<span class="k">end</span>
</span><span class='line'>		<span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">hare</span> <span class="o">=</span> <span class="nb">self</span>
</span><span class='line'>    <span class="k">while</span> <span class="o">!</span><span class="n">tortoise</span><span class="o">.</span><span class="n">nil?</span> <span class="ow">and</span> <span class="o">!</span><span class="n">hare</span><span class="o">.</span><span class="n">eql?</span><span class="p">(</span><span class="n">tortoise</span><span class="o">.</span><span class="n">next</span><span class="p">)</span>
</span><span class='line'>      <span class="n">hare</span> <span class="o">=</span> <span class="n">hare</span><span class="o">.</span><span class="n">next</span>
</span><span class='line'>      <span class="n">tortoise</span> <span class="o">=</span> <span class="n">tortoise</span><span class="o">.</span><span class="n">next</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>    <span class="n">tortoise</span><span class="o">.</span><span class="n">next</span> <span class="o">=</span> <span class="kp">nil</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="n">test_list</span> <span class="o">=</span> <span class="no">List</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'><span class="n">test_list</span><span class="o">.</span><span class="n">next</span> <span class="o">=</span> <span class="no">List</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span>
</span><span class='line'><span class="n">test_list</span><span class="o">.</span><span class="n">next</span><span class="o">.</span><span class="n">next</span> <span class="o">=</span> <span class="no">List</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="mi">3</span><span class="p">)</span>
</span><span class='line'><span class="n">test_list</span><span class="o">.</span><span class="n">next</span><span class="o">.</span><span class="n">next</span><span class="o">.</span><span class="n">next</span> <span class="o">=</span> <span class="no">List</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="mi">4</span><span class="p">)</span>
</span><span class='line'><span class="n">test_list</span><span class="o">.</span><span class="n">next</span><span class="o">.</span><span class="n">next</span><span class="o">.</span><span class="n">next</span><span class="o">.</span><span class="n">next</span> <span class="o">=</span> <span class="no">List</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="mi">5</span><span class="p">)</span>
</span><span class='line'><span class="n">test_list</span><span class="o">.</span><span class="n">next</span><span class="o">.</span><span class="n">next</span><span class="o">.</span><span class="n">next</span><span class="o">.</span><span class="n">next</span><span class="o">.</span><span class="n">next</span> <span class="o">=</span> <span class="n">test_list</span><span class="o">.</span><span class="n">next</span><span class="o">.</span><span class="n">next</span>
</span><span class='line'>
</span><span class='line'><span class="nb">p</span> <span class="n">test_list</span><span class="o">.</span><span class="n">has_loop</span>
</span><span class='line'><span class="n">test_list</span><span class="o">.</span><span class="n">remove_loop</span>
</span><span class='line'><span class="nb">p</span> <span class="n">test_list</span><span class="o">.</span><span class="n">has_loop</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Matrix - Robot with block detection]]></title>
    <link href="http://karthikselva.github.com/blog/2013/05/05/matrix-robot-with-block-detection/"/>
    <updated>2013-05-05T22:35:00+05:30</updated>
    <id>http://karthikselva.github.com/blog/2013/05/05/matrix-robot-with-block-detection</id>
    <content type="html"><![CDATA[<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>RobotMatrix ruby (path_to_robot.rb)</span> <a href='/downloads/code/path_to_robot.rb'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="n">realtime_grid</span> <span class="o">=</span> <span class="o">[</span>
</span><span class='line'><span class="o">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'><span class="o">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'><span class="o">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'><span class="o">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="o">]</span>
</span><span class='line'><span class="o">]</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">is_safe</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="p">,</span><span class="n">mat</span><span class="p">)</span>
</span><span class='line'>  <span class="k">return</span> <span class="n">mat</span><span class="o">[</span><span class="n">x</span><span class="o">][</span><span class="n">y</span><span class="o">].</span><span class="n">eql?</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span> <span class="p">?</span> <span class="kp">true</span> <span class="p">:</span> <span class="kp">false</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">path_finder</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="p">,</span><span class="n">mat</span><span class="p">,</span><span class="n">path</span><span class="p">)</span>
</span><span class='line'>  <span class="n">path</span> <span class="o">&lt;&lt;</span> <span class="o">[</span><span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="o">]</span>
</span><span class='line'>  <span class="k">if</span> <span class="n">x</span> <span class="o">==</span> <span class="mi">0</span> <span class="ow">and</span> <span class="n">y</span> <span class="o">==</span> <span class="mi">0</span>
</span><span class='line'>    <span class="k">return</span> <span class="kp">true</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">success</span> <span class="o">=</span> <span class="kp">false</span>
</span><span class='line'>  <span class="k">if</span> <span class="n">x</span> <span class="o">&gt;=</span> <span class="mi">1</span> <span class="ow">and</span> <span class="n">is_safe</span><span class="p">(</span><span class="n">x</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="n">y</span><span class="p">,</span><span class="n">mat</span><span class="p">)</span>
</span><span class='line'>    <span class="n">success</span> <span class="o">=</span> <span class="n">path_finder</span><span class="p">(</span><span class="n">x</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="n">y</span><span class="p">,</span><span class="n">mat</span><span class="p">,</span><span class="n">path</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span> <span class="o">!</span><span class="n">success</span> <span class="ow">and</span> <span class="n">y</span> <span class="o">&gt;=</span> <span class="mi">1</span> <span class="ow">and</span> <span class="n">is_safe</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="n">mat</span><span class="p">)</span>
</span><span class='line'>    <span class="n">success</span> <span class="o">=</span> <span class="n">path_finder</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="n">mat</span><span class="p">,</span><span class="n">path</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span> <span class="o">!</span><span class="n">success</span>
</span><span class='line'>    <span class="n">path</span><span class="o">.</span><span class="n">remove</span><span class="p">(</span><span class="o">[</span><span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">return</span> <span class="n">success</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">display</span><span class="p">(</span><span class="n">arr</span><span class="p">)</span>
</span><span class='line'>  <span class="n">arr</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">ar</span><span class="o">|</span>
</span><span class='line'>    <span class="n">ar</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">i</span><span class="o">|</span>
</span><span class='line'>      <span class="nb">print</span> <span class="n">i</span>
</span><span class='line'>      <span class="nb">print</span> <span class="s1">&#39; &#39;</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">path</span> <span class="o">=</span> <span class="o">[]</span>
</span><span class='line'><span class="n">path_finder</span><span class="p">(</span><span class="n">realtime_grid</span><span class="o">.</span><span class="n">length</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="n">realtime_grid</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="n">length</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="n">realtime_grid</span><span class="p">,</span><span class="n">path</span><span class="p">)</span>
</span><span class='line'><span class="nb">display</span><span class="p">(</span><span class="n">realtime_grid</span><span class="p">)</span>
</span><span class='line'><span class="nb">p</span> <span class="n">path</span><span class="o">.</span><span class="n">inspect</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c1">#Output:</span>
</span><span class='line'><span class="c1">#-------</span>
</span><span class='line'><span class="c1">#1 0 0 1 0</span>
</span><span class='line'><span class="c1">#1 1 0 0 0</span>
</span><span class='line'><span class="c1">#1 1 1 1 1</span>
</span><span class='line'><span class="c1">#0 0 0 0 1</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#&quot;[[3, 4], [2, 4], [2, 3], [2, 2], [2, 1], [1, 1], [1, 0], [0, 0]]&quot;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Prime - Seive of Erastothenes]]></title>
    <link href="http://karthikselva.github.com/blog/2013/05/05/prime-seive-of-erastothenes/"/>
    <updated>2013-05-05T19:38:00+05:30</updated>
    <id>http://karthikselva.github.com/blog/2013/05/05/prime-seive-of-erastothenes</id>
    <content type="html"><![CDATA[<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>SeiveOfErastothens (seive_of_erastothenes.rb)</span> <a href='/downloads/code/seive_of_erastothenes.rb'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="k">def</span> <span class="nf">set</span><span class="p">(</span><span class="n">array</span><span class="p">,</span><span class="n">num</span><span class="p">)</span>
</span><span class='line'>  <span class="p">((</span><span class="n">num</span><span class="o">**</span><span class="n">num</span><span class="p">)</span><span class="o">.</span><span class="n">.array</span><span class="o">.</span><span class="n">length</span><span class="p">)</span><span class="o">.</span><span class="n">step</span><span class="p">(</span><span class="n">num</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">i</span><span class="o">|</span>
</span><span class='line'>    <span class="n">array</span><span class="o">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="o">]</span> <span class="o">=</span> <span class="mi">1</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="k">return</span> <span class="n">array</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">seive</span><span class="p">(</span><span class="n">num</span><span class="p">)</span>
</span><span class='line'>  <span class="k">if</span> <span class="n">num</span> <span class="o">&lt;</span> <span class="mi">2</span>
</span><span class='line'>    <span class="k">return</span> <span class="kp">nil</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="n">a</span> <span class="o">=</span> <span class="o">[</span><span class="mi">0</span><span class="o">]*</span><span class="n">num</span>
</span><span class='line'>  <span class="p">(</span><span class="mi">1</span><span class="o">.</span><span class="n">.num</span><span class="p">)</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">i</span><span class="o">|</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">a</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">==</span> <span class="mi">0</span>
</span><span class='line'>      <span class="nb">puts</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>      <span class="n">a</span><span class="o">=</span><span class="n">set</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">return</span> <span class="n">a</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="nb">p</span> <span class="n">seive</span><span class="p">(</span><span class="mi">50</span><span class="p">)</span><span class="o">.</span><span class="n">inspect</span>
</span><span class='line'><span class="c1">##Output</span>
</span><span class='line'><span class="c1">#2</span>
</span><span class='line'><span class="c1">#3</span>
</span><span class='line'><span class="c1">#5</span>
</span><span class='line'><span class="c1">#7</span>
</span><span class='line'><span class="c1">#9</span>
</span><span class='line'><span class="c1">#11</span>
</span><span class='line'><span class="c1">#13</span>
</span><span class='line'><span class="c1">#15</span>
</span><span class='line'><span class="c1">#17</span>
</span><span class='line'><span class="c1">#19</span>
</span><span class='line'><span class="c1">#21</span>
</span><span class='line'><span class="c1">#23</span>
</span><span class='line'><span class="c1">#25</span>
</span><span class='line'><span class="c1">#29</span>
</span><span class='line'><span class="c1">#31</span>
</span><span class='line'><span class="c1">#35</span>
</span><span class='line'><span class="c1">#37</span>
</span><span class='line'><span class="c1">#41</span>
</span><span class='line'><span class="c1">#43</span>
</span><span class='line'><span class="c1">#47</span>
</span><span class='line'><span class="c1">#49</span>
</span><span class='line'><span class="c1">#&quot;[0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1]&quot;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Matrix - Rotate a matrix 90* to Right]]></title>
    <link href="http://karthikselva.github.com/blog/2013/05/05/matrix-rotate-a-matrix-90-star-to-right/"/>
    <updated>2013-05-05T02:17:00+05:30</updated>
    <id>http://karthikselva.github.com/blog/2013/05/05/matrix-rotate-a-matrix-90-star-to-right</id>
    <content type="html"><![CDATA[<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Rotate ruby (rotate_matrix.rb)</span> <a href='/downloads/code/rotate_matrix.rb'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="n">mat</span> <span class="o">=</span> <span class="o">[</span>
</span><span class='line'>    <span class="o">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>    <span class="o">[</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="mi">8</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>    <span class="o">[</span><span class="mi">9</span><span class="p">,</span><span class="mi">10</span><span class="p">,</span><span class="mi">11</span><span class="p">,</span><span class="mi">12</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>    <span class="o">[</span><span class="mi">13</span><span class="p">,</span><span class="mi">14</span><span class="p">,</span><span class="mi">15</span><span class="p">,</span><span class="mi">16</span><span class="o">]</span>
</span><span class='line'>    <span class="o">]</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">rotate</span><span class="p">(</span><span class="n">img</span><span class="p">)</span>
</span><span class='line'>  <span class="n">n</span> <span class="o">=</span> <span class="n">img</span><span class="o">.</span><span class="n">length</span>
</span><span class='line'>  <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="n">.</span><span class="p">(</span><span class="n">n</span><span class="o">/</span><span class="mi">2</span><span class="p">))</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">layer</span><span class="o">|</span>
</span><span class='line'>    <span class="n">first</span> <span class="o">=</span> <span class="n">layer</span>
</span><span class='line'>    <span class="n">last</span> <span class="o">=</span> <span class="n">n</span> <span class="o">-</span> <span class="n">layer</span> <span class="o">-</span> <span class="mi">1</span>
</span><span class='line'>    <span class="p">(</span><span class="n">first</span><span class="o">.</span><span class="n">.</span><span class="o">.</span><span class="n">last</span><span class="p">)</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">i</span><span class="o">|</span>
</span><span class='line'>      <span class="n">last_offset</span> <span class="o">=</span> <span class="n">last</span> <span class="o">-</span> <span class="p">(</span> <span class="n">i</span> <span class="o">-</span> <span class="n">first</span> <span class="p">)</span>
</span><span class='line'>      <span class="n">tmp</span> <span class="o">=</span> <span class="n">img</span><span class="o">[</span><span class="n">first</span><span class="o">][</span><span class="n">i</span><span class="o">]</span>
</span><span class='line'>      <span class="n">img</span><span class="o">[</span><span class="n">first</span><span class="o">][</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="n">img</span><span class="o">[</span><span class="n">last_offset</span><span class="o">][</span><span class="n">first</span><span class="o">]</span>
</span><span class='line'>      <span class="n">img</span><span class="o">[</span><span class="n">last_offset</span><span class="o">][</span><span class="n">first</span><span class="o">]</span> <span class="o">=</span> <span class="n">img</span><span class="o">[</span><span class="n">last</span><span class="o">][</span><span class="n">last_offset</span><span class="o">]</span>
</span><span class='line'>      <span class="n">img</span><span class="o">[</span><span class="n">last</span><span class="o">][</span><span class="n">last_offset</span><span class="o">]</span> <span class="o">=</span> <span class="n">img</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">last</span><span class="o">]</span>
</span><span class='line'>      <span class="n">img</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">last</span><span class="o">]</span> <span class="o">=</span> <span class="n">tmp</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">display</span><span class="p">(</span><span class="n">arr</span><span class="p">)</span>
</span><span class='line'>  <span class="n">arr</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">ar</span><span class="o">|</span>
</span><span class='line'>    <span class="n">ar</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">i</span><span class="o">|</span>
</span><span class='line'>      <span class="nb">print</span> <span class="n">i</span>
</span><span class='line'>      <span class="nb">print</span> <span class="s1">&#39; &#39;</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="nb">p</span> <span class="s2">&quot; Input Matrix &quot;</span>
</span><span class='line'><span class="nb">display</span><span class="p">(</span><span class="n">mat</span><span class="p">)</span>
</span><span class='line'><span class="n">rotate</span><span class="p">(</span><span class="n">mat</span><span class="p">)</span>
</span><span class='line'><span class="nb">p</span> <span class="s2">&quot; Rotated Matrix (90* to right)&quot;</span>
</span><span class='line'><span class="nb">display</span><span class="p">(</span><span class="n">mat</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Output: </span>
</span><span class='line'><span class="c1">#</span>
</span><span class='line'><span class="c1">#&quot; Input Matrix &quot;</span>
</span><span class='line'><span class="c1">#1 2 3 4</span>
</span><span class='line'><span class="c1">#5 6 7 8</span>
</span><span class='line'><span class="c1">#9 10 11 12</span>
</span><span class='line'><span class="c1">#13 14 15 16</span>
</span><span class='line'><span class="c1">#&quot; Rotated Matrix (90* to right)&quot;</span>
</span><span class='line'><span class="c1">#13 9 5 1</span>
</span><span class='line'><span class="c1">#14 10 6 2</span>
</span><span class='line'><span class="c1">#15 11 7 3</span>
</span><span class='line'><span class="c1">#16 12 8 4</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Array - Maximum Subsequence with start and end of index]]></title>
    <link href="http://karthikselva.github.com/blog/2013/04/17/array-maximum-subsequence-with-start-and-end-of-index/"/>
    <updated>2013-04-17T23:53:00+05:30</updated>
    <id>http://karthikselva.github.com/blog/2013/04/17/array-maximum-subsequence-with-start-and-end-of-index</id>
    <content type="html"><![CDATA[<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>MaximumSubsequence ruby (maximum_subsequence.rb)</span> <a href='/downloads/code/maximum_subsequence.rb'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="n">arr</span> <span class="o">=</span> <span class="o">[</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="mi">8</span><span class="p">,</span><span class="o">-</span><span class="mi">3</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="o">-</span><span class="mi">4</span><span class="p">,</span><span class="o">-</span><span class="mi">2</span><span class="p">,</span><span class="mi">9</span><span class="p">,</span><span class="o">-</span><span class="mi">2</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="o">-</span><span class="mi">5</span><span class="o">]</span>
</span><span class='line'>
</span><span class='line'><span class="n">start</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'><span class="n">ending</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'><span class="n">maxsofar</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'><span class="n">maxendinghere</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">max</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="n">j</span><span class="p">)</span>
</span><span class='line'>  <span class="k">if</span> <span class="n">i</span> <span class="o">&gt;</span> <span class="n">j</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">i</span>
</span><span class='line'>  <span class="k">else</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">j</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">arr</span><span class="o">.</span><span class="n">each_with_index</span> <span class="k">do</span> <span class="o">|</span><span class="n">val</span><span class="p">,</span><span class="n">i</span><span class="o">|</span>
</span><span class='line'>  <span class="n">maxendinghere</span> <span class="o">=</span> <span class="n">max</span><span class="p">(</span><span class="n">maxendinghere</span> <span class="o">+</span> <span class="n">val</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>  <span class="k">if</span> <span class="n">maxendinghere</span> <span class="o">&gt;</span> <span class="n">maxsofar</span>
</span><span class='line'>    <span class="n">ending</span> <span class="o">=</span> <span class="n">i</span>
</span><span class='line'>    <span class="n">maxsofar</span> <span class="o">=</span> <span class="n">maxendinghere</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">sum</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'><span class="c1"># Backtrack to find the start </span>
</span><span class='line'><span class="c1"># Another n traversal =&gt; 2n :: O(n)</span>
</span><span class='line'><span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="n">.ending</span><span class="p">)</span><span class="o">.</span><span class="n">to_a</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">from_end</span><span class="o">|</span>
</span><span class='line'>  <span class="n">sum</span> <span class="o">+=</span> <span class="n">arr</span><span class="o">[</span><span class="n">ending</span> <span class="o">-</span> <span class="n">from_end</span><span class="o">]</span>
</span><span class='line'>  <span class="k">if</span> <span class="n">sum</span> <span class="o">==</span> <span class="n">maxsofar</span>
</span><span class='line'>    <span class="n">start</span> <span class="o">=</span> <span class="n">arr</span><span class="o">.</span><span class="n">length</span> <span class="o">-</span> <span class="n">from_end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="nb">p</span> <span class="s2">&quot; starting from index: </span><span class="si">#{</span><span class="n">start</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'><span class="nb">p</span> <span class="s2">&quot; ending at index: </span><span class="si">#{</span><span class="n">ending</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'><span class="nb">p</span> <span class="s2">&quot;Maximum sum is: </span><span class="si">#{</span><span class="n">maxsofar</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'><span class="c1"># Output:</span>
</span><span class='line'><span class="c1">#&quot; starting from index: 3&quot;</span>
</span><span class='line'><span class="c1">#&quot; ending at index: 12&quot;</span>
</span><span class='line'><span class="c1">#&quot;Maximum sum is: 24&quot;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>
]]></content>
  </entry>
  
</feed>
