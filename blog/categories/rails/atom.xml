<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Rails | Hacker's Diary]]></title>
  <link href="http://karthikselva.github.com/blog/categories/rails/atom.xml" rel="self"/>
  <link href="http://karthikselva.github.com/"/>
  <updated>2013-05-05T02:21:06+05:30</updated>
  <id>http://karthikselva.github.com/</id>
  <author>
    <name><![CDATA[karthikselva's log]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Mischeivous bang(!) operator in Ruby]]></title>
    <link href="http://karthikselva.github.com/blog/2013/03/15/mischeivous-bang-operator-in-ruby/"/>
    <updated>2013-03-15T16:02:00+05:30</updated>
    <id>http://karthikselva.github.com/blog/2013/03/15/mischeivous-bang-operator-in-ruby</id>
    <content type="html"><![CDATA[<p>This is a typical ruby programmer's style of overwriting on the same object:</p>

<pre><code>array = [1.2 , 2.7] 
array.map!(&amp;:floor)
</code></pre>

<p>This will modify my same object <em>array</em>.</p>

<pre><code>puts array
#=&gt; [1,2]
</code></pre>

<p>Similarly, the below code removes <strong>nil</strong> values from an array :</p>

<pre><code>array = [1 , 2, nil, 3, nil, 5]
new_array = array.compact
puts new_array
#=&gt; [1,2,3,5]
</code></pre>

<p>But if we try to use bang operator for compact we will end up with nil for no nil value cases in an array.</p>

<pre><code>array = [1 , 2, 3] # No nil values present
array.compact!
puts array
#=&gt; nil
</code></pre>

<p>This can easily escapes from our eyes while debugging the code.</p>

<p>http://ruby-doc.org/core-1.9.3/Array.html#method-i-collect-21</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ Rails with Vim - how and why it works ? ]]></title>
    <link href="http://karthikselva.github.com/blog/2012/12/26/rails-with-vim-how-and-why-it-works/"/>
    <updated>2012-12-26T23:36:00+05:30</updated>
    <id>http://karthikselva.github.com/blog/2012/12/26/rails-with-vim-how-and-why-it-works</id>
    <content type="html"><![CDATA[<h2>How it started</h2>

<p>I started my coding in a windows XP with notepad.
I can realize now how terrible it was.
Then I came through a term called IDE which has everything a programmer
needs in one place. Starting with netbeans for java
and some random Junit test tools in eclipse , I really regreted for
wasting my time in notepad.</p>

<p>Most of the times I used to do one among these listed items apart from real typing/coding:</p>

<ul>
<li><p>Searching the API sheet for exact name of method</p>

<ul>
<li>In Java typically confused with length() , size() , count or length variable usage</li>
<li>I know rubyists , ruby has everything</li>
</ul>
</li>
<li><p>Missing ( , { or some parantheses ( not as much careless as initial days  )</p>

<ul>
<li>I remember my first programming lab on c which I spent most of my time in figuring out the matching parantheses for the code I copied from internet</li>
</ul>
</li>
<li><p>Variable declared with one name but using it with different name</p>

<ul>
<li>I used to decalre a variable with User#name  and trying to access with User#username</li>
</ul>
</li>
<li><p>Version control integration</p>

<ul>
<li>Version control itself is a different topic to discuss for hours</li>
<li>I use some set of plugins to commit and revert ( which I don't even bother on what command it is being translated on in background )</li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
</feed>
