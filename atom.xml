<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[random software geek]]></title>
  <link href="http://karthikselva.in/atom.xml" rel="self"/>
  <link href="http://karthikselva.in/"/>
  <updated>2014-07-26T15:56:03-07:00</updated>
  <id>http://karthikselva.in/</id>
  <author>
    <name><![CDATA[karthikselva]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Recursion - NxN queens Solution 2 ]]></title>
    <link href="http://karthikselva.in/blog/2014/07/26/recursion-nxn-queens-solution-2/"/>
    <updated>2014-07-26T15:21:00-07:00</updated>
    <id>http://karthikselva.in/blog/2014/07/26/recursion-nxn-queens-solution-2</id>
    <content type="html"><![CDATA[<figure class='code'><figcaption><span>QUEEN (nqueen.rb)</span> <a href='http://karthikselva.in/downloads/code/nqueen.rb'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="k">class</span> <span class="nc">ChessBoard</span>
</span><span class='line'>  <span class="kp">attr_accessor</span> <span class="ss">:board</span><span class="p">,</span> <span class="ss">:dimension</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">dimension</span><span class="p">)</span>
</span><span class='line'>      <span class="vi">@board</span> <span class="o">=</span> <span class="o">[]</span>
</span><span class='line'>      <span class="vi">@dimension</span> <span class="o">=</span> <span class="n">dimension</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">place_nqn</span>
</span><span class='line'>      <span class="n">_place_nqn</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="kp">private</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">_place_nqn</span><span class="p">(</span><span class="n">k</span><span class="p">)</span>
</span><span class='line'>      <span class="vi">@dimension</span><span class="o">.</span><span class="n">times</span> <span class="k">do</span> <span class="o">|</span><span class="n">i</span><span class="o">|</span>
</span><span class='line'>          <span class="k">if</span> <span class="n">place_qn?</span><span class="p">(</span><span class="n">k</span><span class="p">,</span><span class="n">i</span><span class="p">)</span>
</span><span class='line'>              <span class="vi">@board</span><span class="o">[</span><span class="n">k</span><span class="o">]</span> <span class="o">=</span> <span class="n">i</span>
</span><span class='line'>              <span class="k">if</span> <span class="n">k</span> <span class="o">==</span> <span class="p">(</span><span class="vi">@dimension</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'>                  <span class="n">board</span>
</span><span class='line'>              <span class="k">else</span>
</span><span class='line'>                  <span class="n">_place_nqn</span><span class="p">(</span><span class="n">k</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'>              <span class="k">end</span>
</span><span class='line'>          <span class="k">end</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">place_qn?</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="p">)</span>
</span><span class='line'>      <span class="n">x</span><span class="o">.</span><span class="n">times</span> <span class="k">do</span> <span class="o">|</span><span class="n">i</span><span class="o">|</span>
</span><span class='line'>          <span class="k">if</span> <span class="n">x</span> <span class="o">==</span> <span class="n">i</span> <span class="ow">or</span> <span class="vi">@board</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">==</span> <span class="n">y</span>
</span><span class='line'>              <span class="k">return</span> <span class="kp">false</span>
</span><span class='line'>          <span class="k">elsif</span> <span class="p">(</span><span class="vi">@board</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="n">to_i</span><span class="o">-</span><span class="n">y</span><span class="p">)</span><span class="o">.</span><span class="n">abs</span> <span class="o">==</span> <span class="p">(</span><span class="n">x</span><span class="o">-</span><span class="n">i</span><span class="p">)</span><span class="o">.</span><span class="n">abs</span>
</span><span class='line'>              <span class="k">return</span> <span class="kp">false</span>
</span><span class='line'>          <span class="k">end</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>      <span class="k">return</span> <span class="kp">true</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">board</span>
</span><span class='line'>      <span class="nb">puts</span> <span class="s2">&quot; NEW BOARD &quot;</span>
</span><span class='line'>      <span class="vi">@dimension</span><span class="o">.</span><span class="n">times</span> <span class="k">do</span> <span class="o">|</span><span class="n">i</span><span class="o">|</span>
</span><span class='line'>          <span class="nb">print</span> <span class="s2">&quot;|&quot;</span>
</span><span class='line'>          <span class="vi">@dimension</span><span class="o">.</span><span class="n">times</span> <span class="k">do</span> <span class="o">|</span><span class="n">j</span><span class="o">|</span>
</span><span class='line'>              <span class="k">if</span> <span class="vi">@board</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">==</span> <span class="n">j</span>
</span><span class='line'>                  <span class="nb">print</span> <span class="s1">&#39; X |&#39;</span>
</span><span class='line'>              <span class="k">else</span>
</span><span class='line'>                  <span class="nb">print</span> <span class="s2">&quot;   |&quot;</span>
</span><span class='line'>              <span class="k">end</span>
</span><span class='line'>          <span class="k">end</span>
</span><span class='line'>          <span class="nb">puts</span> <span class="s2">&quot;&quot;</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">cb</span> <span class="o">=</span> <span class="no">ChessBoard</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="mi">4</span><span class="p">)</span>
</span><span class='line'><span class="n">cb</span><span class="o">.</span><span class="n">place_nqn</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Output:</span>
</span><span class='line'><span class="c1"># ------</span>
</span><span class='line'><span class="c1">#</span>
</span><span class='line'><span class="c1">#  NEW BOARD</span>
</span><span class='line'><span class="c1"># |   | X |   |   |</span>
</span><span class='line'><span class="c1"># |   |   |   | X |</span>
</span><span class='line'><span class="c1"># | X |   |   |   |</span>
</span><span class='line'><span class="c1"># |   |   | X |   |</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#  NEW BOARD</span>
</span><span class='line'><span class="c1"># |   |   | X |   |</span>
</span><span class='line'><span class="c1"># | X |   |   |   |</span>
</span><span class='line'><span class="c1"># |   |   |   | X |</span>
</span><span class='line'><span class="c1"># |   | X |   |   |</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Javascript - my old friend]]></title>
    <link href="http://karthikselva.in/blog/2014/07/15/javascript-my-old-friend/"/>
    <updated>2014-07-15T00:09:00-07:00</updated>
    <id>http://karthikselva.in/blog/2014/07/15/javascript-my-old-friend</id>
    <content type="html"><![CDATA[<p>Javascript and me were longtime friends. We occasionaly met whenever I need something from him. But sadly I couldn&#8217;t understand his real face for a long time. I always seen him hanging out with his friend html. html is so liberal and he allows Javascript everywhere into his home using script tag. But I know Javascript and html should not be too close and they belong in different places.</p>

<p> My guilty consciousness increased each time when I allowed him to play with html. It still got high when I used global variables everywhere. He messed up the clean home of html. Sometimes he got angry and he screamed &#8216;undefined&#8217;,&#8217;undefined&#8217; everywhere. He even destroyed entire house of html. I thought I should take action immediately or it would go worse.</p>

<p>Javascript loved div a lot. He made her life more dynamic. He gave all those transitions.  I seen him playing hide and seek with her many times. He gave life to her in one click and removed it back in another. They were in love for a longtime. He secretly worked with AJAX to give her all the required ornaments. html was happy since he didn&#8217;t destroy his home again and again by reload. He gave freedom to Javascript since he didn&#8217;t disturb him.</p>

<p>Then came this super guy jQuery from nowhere. He gave more luxury to div. Everyone started praising him and Javascript was left alone. div din&#8217;t even looked back at him after that. He was all alone. He tried to explain jQuery is nothing but him, but no one ever beleived. jQuery proved himself to be powerful in each and every action. My friendship with Javascript started to fade away.</p>

<p>After a long time I met him again. I met him where I never expected. He was happy. He didn&#8217;t reside in html&#8217;s home this time. He was handling web requests. Yes he was sitting as a king in the server palace. He called himself node.js and did everything the old king rails would do. He proved himself to be the powerful king. jQuery and div gazed with envy. I couldn&#8217;t leave my old king but still couldn&#8217;t resist accepting that he is the best. Sorry my friend I shouldn&#8217;t have forgotten you.</p>

<p>to be continued &#8230;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Excel Sheet Alphabet to decimal Coversion]]></title>
    <link href="http://karthikselva.in/blog/2013/05/07/excel-sheet-alphabet-to-decimal-coversion/"/>
    <updated>2013-05-07T21:22:00-07:00</updated>
    <id>http://karthikselva.in/blog/2013/05/07/excel-sheet-alphabet-to-decimal-coversion</id>
    <content type="html"><![CDATA[<figure class='code'><figcaption><span>Excel (sheet.rb)</span> <a href='http://karthikselva.in/downloads/code/sheet.rb'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="k">def</span> <span class="nf">get_max_sum</span><span class="p">(</span><span class="n">num</span><span class="p">)</span>
</span><span class='line'>  <span class="k">if</span> <span class="n">num</span> <span class="o">&lt;</span> <span class="mi">1</span>
</span><span class='line'>    <span class="k">return</span> <span class="mi">0</span>
</span><span class='line'>  <span class="k">else</span>
</span><span class='line'>    <span class="k">return</span> <span class="p">(</span><span class="mi">26</span><span class="o">**</span><span class="n">num</span><span class="p">)</span><span class="o">+</span><span class="n">get_max_sum</span><span class="p">(</span><span class="n">num</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">cal_sum</span><span class="p">(</span><span class="n">st</span><span class="p">)</span>
</span><span class='line'>  <span class="n">sum</span> <span class="o">=</span> <span class="n">get_max_sum</span><span class="p">(</span><span class="n">st</span><span class="o">.</span><span class="n">length</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)</span>
</span><span class='line'>  <span class="n">st</span><span class="o">.</span><span class="n">length</span><span class="o">.</span><span class="n">times</span> <span class="k">do</span> <span class="o">|</span><span class="n">i</span><span class="o">|</span>
</span><span class='line'>    <span class="n">sum</span> <span class="o">+=</span> <span class="p">(</span><span class="n">st</span><span class="o">[</span><span class="n">i</span><span class="o">]-</span><span class="mi">97</span><span class="p">)</span><span class="o">*</span><span class="p">(</span><span class="mi">26</span><span class="o">**</span><span class="p">(</span><span class="n">st</span><span class="o">.</span><span class="n">length</span><span class="o">-</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="k">return</span> <span class="n">sum</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="nb">p</span> <span class="n">cal_sum</span><span class="p">(</span><span class="s1">&#39;abc&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[String - Naive pattern search]]></title>
    <link href="http://karthikselva.in/blog/2013/05/07/string-naive-pattern-search/"/>
    <updated>2013-05-07T21:21:00-07:00</updated>
    <id>http://karthikselva.in/blog/2013/05/07/string-naive-pattern-search</id>
    <content type="html"><![CDATA[<figure class='code'><figcaption><span>NaiveSearch (naive_pattern_matching.rb)</span> <a href='http://karthikselva.in/downloads/code/naive_pattern_matching.rb'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="c1"># Complexity: O((n-m+1)*m) </span>
</span><span class='line'><span class="k">def</span> <span class="nf">naive_search</span><span class="p">(</span><span class="n">source</span><span class="p">,</span><span class="n">find</span><span class="p">)</span>
</span><span class='line'>  <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>  <span class="n">j</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>  <span class="p">(</span><span class="n">source</span><span class="o">.</span><span class="n">length</span><span class="o">-</span><span class="n">find</span><span class="o">.</span><span class="n">length</span><span class="p">)</span><span class="o">.</span><span class="n">times</span> <span class="k">do</span> <span class="o">|</span><span class="n">i</span><span class="o">|</span>
</span><span class='line'>    <span class="n">find</span><span class="o">.</span><span class="n">length</span><span class="o">.</span><span class="n">times</span> <span class="k">do</span> <span class="o">|</span><span class="n">j</span><span class="o">|</span>
</span><span class='line'>      <span class="k">if</span> <span class="n">source</span><span class="o">[</span><span class="n">i</span><span class="o">+</span><span class="n">j</span><span class="o">]</span> <span class="o">!=</span> <span class="n">find</span><span class="o">[</span><span class="n">j</span><span class="o">]</span>
</span><span class='line'>        <span class="k">break</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">j</span> <span class="o">==</span> <span class="p">(</span><span class="n">find</span><span class="o">.</span><span class="n">length</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">i</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="k">return</span> <span class="o">-</span><span class="mi">1</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">source</span> <span class="o">=</span> <span class="s2">&quot;THIS IS A TEST STRING&quot;</span>
</span><span class='line'><span class="n">find</span><span class="o">=</span><span class="s2">&quot;TEST&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="nb">p</span> <span class="n">naive_search</span><span class="p">(</span><span class="n">source</span><span class="p">,</span><span class="n">find</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Recursion - Solution for NxN queens]]></title>
    <link href="http://karthikselva.in/blog/2013/05/07/recursion-solution-for-nxn-queens/"/>
    <updated>2013-05-07T21:21:00-07:00</updated>
    <id>http://karthikselva.in/blog/2013/05/07/recursion-solution-for-nxn-queens</id>
    <content type="html"><![CDATA[<figure class='code'><figcaption><span>QUEEN (queen.rb)</span> <a href='http://karthikselva.in/downloads/code/queen.rb'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="k">def</span> <span class="nf">safe?</span><span class="p">(</span><span class="n">board</span><span class="p">,</span><span class="n">row</span><span class="p">,</span><span class="n">col</span><span class="p">)</span>
</span><span class='line'>  <span class="nb">display</span><span class="p">(</span><span class="n">board</span><span class="p">)</span>
</span><span class='line'>  <span class="nb">p</span> <span class="s2">&quot;received: row=</span><span class="si">#{</span><span class="n">row</span><span class="si">}</span><span class="s2"> col=</span><span class="si">#{</span><span class="n">col</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>
</span><span class='line'>  <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="n">.col</span><span class="p">)</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">r</span><span class="o">|</span>
</span><span class='line'>    <span class="nb">p</span> <span class="s2">&quot;horizontal: (</span><span class="si">#{</span><span class="n">r</span><span class="si">}</span><span class="s2">,</span><span class="si">#{</span><span class="n">col</span><span class="si">}</span><span class="s2">)&quot;</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">board</span><span class="o">[</span><span class="n">row</span><span class="o">][</span><span class="n">r</span><span class="o">]</span> <span class="o">==</span> <span class="mi">1</span>
</span><span class='line'>      <span class="k">return</span> <span class="kp">false</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">r</span> <span class="o">=</span> <span class="n">row</span>
</span><span class='line'>  <span class="n">c</span> <span class="o">=</span> <span class="n">col</span>
</span><span class='line'>  <span class="k">while</span> <span class="n">r</span> <span class="o">&gt;=</span> <span class="mi">0</span> <span class="ow">and</span> <span class="n">c</span> <span class="o">&gt;=</span> <span class="mi">0</span>
</span><span class='line'>    <span class="nb">p</span> <span class="s2">&quot;upper diagonal: (</span><span class="si">#{</span><span class="n">r</span><span class="si">}</span><span class="s2">,</span><span class="si">#{</span><span class="n">c</span><span class="si">}</span><span class="s2">)&quot;</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">board</span><span class="o">[</span><span class="n">r</span><span class="o">][</span><span class="n">c</span><span class="o">]</span> <span class="o">==</span> <span class="mi">1</span>
</span><span class='line'>      <span class="k">return</span> <span class="kp">false</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>    <span class="n">r</span> <span class="o">-=</span> <span class="mi">1</span>
</span><span class='line'>    <span class="n">c</span> <span class="o">-=</span> <span class="mi">1</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">r</span> <span class="o">=</span> <span class="n">row</span>
</span><span class='line'>  <span class="n">c</span> <span class="o">=</span> <span class="n">col</span>
</span><span class='line'>  <span class="k">while</span> <span class="n">r</span> <span class="o">&lt;</span> <span class="n">board</span><span class="o">.</span><span class="n">length</span> <span class="ow">and</span> <span class="n">c</span> <span class="o">&gt;=</span> <span class="mi">0</span>
</span><span class='line'>    <span class="nb">p</span> <span class="s2">&quot; low diagonal: (</span><span class="si">#{</span><span class="n">r</span><span class="si">}</span><span class="s2">,</span><span class="si">#{</span><span class="n">c</span><span class="si">}</span><span class="s2">)&quot;</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">board</span><span class="o">[</span><span class="n">r</span><span class="o">][</span><span class="n">c</span><span class="o">]</span> <span class="o">==</span> <span class="mi">1</span>
</span><span class='line'>      <span class="k">return</span> <span class="kp">false</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>    <span class="n">r</span> <span class="o">+=</span> <span class="mi">1</span>
</span><span class='line'>    <span class="n">c</span> <span class="o">-=</span> <span class="mi">1</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">return</span> <span class="kp">true</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">solve</span><span class="p">(</span><span class="n">board</span><span class="p">,</span><span class="n">col</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>  <span class="k">if</span> <span class="n">col</span> <span class="o">&gt;=</span> <span class="n">board</span><span class="o">.</span><span class="n">length</span>
</span><span class='line'>    <span class="k">return</span> <span class="kp">true</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="n">.</span><span class="o">.</span><span class="n">board</span><span class="o">.</span><span class="n">length</span><span class="p">)</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">i</span><span class="o">|</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">safe?</span><span class="p">(</span><span class="n">board</span><span class="p">,</span><span class="n">i</span><span class="p">,</span><span class="n">col</span><span class="p">)</span>
</span><span class='line'>      <span class="n">board</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">col</span><span class="o">]</span> <span class="o">=</span> <span class="mi">1</span>
</span><span class='line'>      <span class="k">if</span> <span class="n">solve</span><span class="p">(</span><span class="n">board</span><span class="p">,</span><span class="n">col</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'>        <span class="k">return</span> <span class="kp">true</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>    <span class="nb">p</span> <span class="s2">&quot;Backtracking .. &quot;</span>
</span><span class='line'>    <span class="n">board</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">col</span><span class="o">]</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="k">return</span> <span class="kp">false</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">display</span><span class="p">(</span><span class="n">array</span><span class="p">)</span>
</span><span class='line'>  <span class="n">array</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">a</span><span class="o">|</span>
</span><span class='line'>    <span class="nb">p</span> <span class="n">a</span><span class="o">.</span><span class="n">inspect</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="k">if</span> <span class="o">!</span><span class="no">ARGV</span><span class="o">.</span><span class="n">first</span><span class="o">.</span><span class="n">nil?</span>
</span><span class='line'>  <span class="n">N</span> <span class="o">=</span> <span class="no">ARGV</span><span class="o">.</span><span class="n">first</span><span class="o">.</span><span class="n">to_i</span>
</span><span class='line'><span class="k">else</span>
</span><span class='line'>  <span class="n">N</span> <span class="o">=</span> <span class="mi">4</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="n">board</span>  <span class="o">=</span> <span class="o">[]</span>
</span><span class='line'><span class="n">N</span><span class="o">.</span><span class="n">times</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">board</span> <span class="o">&lt;&lt;</span> <span class="o">[</span><span class="mi">0</span><span class="o">]*</span><span class="n">N</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">solve</span><span class="p">(</span><span class="n">board</span><span class="p">)</span>
</span><span class='line'><span class="nb">display</span><span class="p">(</span><span class="n">board</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Recursion - Contigous increasing by one search in array]]></title>
    <link href="http://karthikselva.in/blog/2013/05/07/recursion-contigous-increasing-by-one-search-in-array/"/>
    <updated>2013-05-07T21:20:00-07:00</updated>
    <id>http://karthikselva.in/blog/2013/05/07/recursion-contigous-increasing-by-one-search-in-array</id>
    <content type="html"><![CDATA[<figure class='code'><figcaption><span>Array Search (rec_arrray.rb)</span> <a href='http://karthikselva.in/downloads/code/rec_arrray.rb'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="n">a</span> <span class="o">=</span> <span class="o">[</span><span class="mi">1001</span><span class="p">,</span><span class="mi">1001</span><span class="p">,</span><span class="mi">1002</span><span class="p">,</span><span class="mi">1003</span><span class="p">,</span><span class="mi">1004</span><span class="p">,</span><span class="mi">1004</span><span class="p">,</span><span class="mi">1005</span><span class="o">]</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">find</span><span class="p">(</span><span class="n">array</span><span class="p">,</span><span class="n">key</span><span class="p">,</span><span class="n">pos</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>  <span class="k">if</span> <span class="n">key</span> <span class="o">&lt;</span> <span class="n">array</span><span class="o">[</span><span class="n">pos</span><span class="o">]</span> <span class="ow">or</span> <span class="n">key</span> <span class="o">&gt;</span> <span class="n">array</span><span class="o">[-</span><span class="mi">1</span><span class="o">]</span>
</span><span class='line'>    <span class="k">return</span> <span class="kp">false</span>
</span><span class='line'>  <span class="k">elsif</span> <span class="n">key</span> <span class="o">&gt;</span> <span class="n">array</span><span class="o">[</span><span class="n">pos</span><span class="o">]</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">find</span><span class="p">(</span><span class="n">array</span><span class="p">,</span><span class="n">key</span><span class="p">,</span><span class="n">pos</span><span class="o">+</span><span class="p">(</span><span class="n">key</span><span class="o">-</span><span class="n">array</span><span class="o">[</span><span class="n">pos</span><span class="o">]</span><span class="p">))</span>
</span><span class='line'>  <span class="k">elsif</span> <span class="n">key</span> <span class="o">==</span> <span class="n">array</span><span class="o">[</span><span class="n">pos</span><span class="o">]</span>
</span><span class='line'>    <span class="k">return</span> <span class="kp">true</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="nb">p</span> <span class="n">find</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="mi">1004</span><span class="p">)</span>
</span><span class='line'><span class="nb">p</span> <span class="n">find</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="mi">1009</span><span class="p">)</span>
</span><span class='line'><span class="nb">p</span> <span class="n">find</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="mi">10</span><span class="p">)</span>
</span><span class='line'><span class="nb">p</span> <span class="n">find</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="mi">1001</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Recursion - GCD]]></title>
    <link href="http://karthikselva.in/blog/2013/05/07/recursion-gcd/"/>
    <updated>2013-05-07T21:19:00-07:00</updated>
    <id>http://karthikselva.in/blog/2013/05/07/recursion-gcd</id>
    <content type="html"><![CDATA[<figure class='code'><figcaption><span>GCD (gcd.rb)</span> <a href='http://karthikselva.in/downloads/code/gcd.rb'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="k">def</span> <span class="nf">gcd</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">)</span>
</span><span class='line'>  <span class="k">if</span> <span class="n">b</span> <span class="o">==</span> <span class="mi">0</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">a</span>
</span><span class='line'>  <span class="k">else</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">gcd</span><span class="p">(</span><span class="n">b</span><span class="p">,</span><span class="n">a</span><span class="o">%</span><span class="n">b</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="nb">p</span> <span class="n">gcd</span><span class="p">(</span><span class="mi">8</span><span class="p">,</span><span class="mi">11</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Combinatronics - All subsets of a set]]></title>
    <link href="http://karthikselva.in/blog/2013/05/05/combinatronics-all-subsets-of-a-set/"/>
    <updated>2013-05-05T23:58:00-07:00</updated>
    <id>http://karthikselva.in/blog/2013/05/05/combinatronics-all-subsets-of-a-set</id>
    <content type="html"><![CDATA[<figure class='code'><figcaption><span> (combinatronic_subset.rb)</span> <a href='http://karthikselva.in/downloads/code/combinatronic_subset.rb'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="k">def</span> <span class="nf">subsets</span><span class="p">(</span><span class="n">str</span><span class="p">)</span>
</span><span class='line'>  <span class="n">n</span> <span class="o">=</span> <span class="mi">2</span> <span class="o">&lt;&lt;</span> <span class="p">(</span><span class="n">str</span><span class="o">.</span><span class="n">length</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)</span>
</span><span class='line'>  <span class="n">result</span> <span class="o">=</span> <span class="o">[]</span>
</span><span class='line'>  <span class="n">n</span><span class="o">.</span><span class="n">times</span> <span class="k">do</span> <span class="o">|</span><span class="n">i</span><span class="o">|</span>
</span><span class='line'>    <span class="n">result</span> <span class="o">&lt;&lt;</span> <span class="n">convert_in_to_set</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="n">str</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="k">return</span> <span class="n">result</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">convert_in_to_set</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="n">str</span><span class="p">)</span>
</span><span class='line'>  <span class="n">tmp</span> <span class="o">=</span> <span class="n">x</span>
</span><span class='line'>  <span class="n">index</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>  <span class="n">set</span> <span class="o">=</span> <span class="s1">&#39;&#39;</span>
</span><span class='line'>  <span class="k">while</span> <span class="n">tmp</span> <span class="o">&gt;</span> <span class="mi">0</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">tmp</span> <span class="o">&amp;</span> <span class="mi">1</span><span class="p">)</span> <span class="o">==</span> <span class="mi">1</span>
</span><span class='line'>      <span class="n">set</span> <span class="o">&lt;&lt;</span> <span class="n">str</span><span class="o">[</span><span class="n">index</span><span class="o">.</span><span class="n">.index</span><span class="o">]</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>    <span class="n">index</span> <span class="o">=</span> <span class="n">index</span> <span class="o">+</span> <span class="mi">1</span>
</span><span class='line'>    <span class="n">tmp</span> <span class="o">=</span> <span class="n">tmp</span> <span class="o">&gt;&gt;</span> <span class="mi">1</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="k">return</span> <span class="n">set</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="nb">p</span> <span class="n">subsets</span><span class="p">(</span><span class="s1">&#39;abc&#39;</span><span class="p">)</span>
</span><span class='line'><span class="c1">#[&quot;&quot;, &quot;a&quot;, &quot;b&quot;, &quot;ab&quot;, &quot;c&quot;, &quot;ac&quot;, &quot;bc&quot;, &quot;abc&quot;]</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Linked List - Loop detection and Removal]]></title>
    <link href="http://karthikselva.in/blog/2013/05/05/linked-list-loop-detection-and-removal/"/>
    <updated>2013-05-05T23:18:00-07:00</updated>
    <id>http://karthikselva.in/blog/2013/05/05/linked-list-loop-detection-and-removal</id>
    <content type="html"><![CDATA[<figure class='code'><figcaption><span>LoopInList ruby (loop_in_list.rb)</span> <a href='http://karthikselva.in/downloads/code/loop_in_list.rb'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="k">class</span> <span class="nc">List</span>
</span><span class='line'>  <span class="kp">attr_accessor</span> <span class="ss">:next</span> <span class="p">,</span> <span class="ss">:data</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">d</span><span class="p">)</span>
</span><span class='line'>      <span class="nb">self</span><span class="o">.</span><span class="n">data</span> <span class="o">=</span> <span class="n">d</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">has_loop</span>
</span><span class='line'>      <span class="n">hare</span><span class="p">,</span><span class="n">tortoise</span> <span class="o">=</span> <span class="nb">self</span><span class="p">,</span><span class="nb">self</span>
</span><span class='line'>      <span class="k">while</span> <span class="o">!</span><span class="n">hare</span><span class="o">.</span><span class="n">nil?</span> <span class="ow">and</span> <span class="o">!</span><span class="n">hare</span><span class="o">.</span><span class="n">next</span><span class="o">.</span><span class="n">nil?</span>
</span><span class='line'>          <span class="n">tortoise</span> <span class="o">=</span> <span class="n">tortoise</span><span class="o">.</span><span class="n">next</span>
</span><span class='line'>          <span class="n">hare</span> <span class="o">=</span> <span class="n">hare</span><span class="o">.</span><span class="n">next</span><span class="o">.</span><span class="n">next</span>
</span><span class='line'>          <span class="k">if</span> <span class="n">hare</span><span class="o">.</span><span class="n">eql?</span><span class="p">(</span><span class="n">tortoise</span><span class="p">)</span>
</span><span class='line'>              <span class="k">return</span> <span class="kp">true</span>
</span><span class='line'>          <span class="k">end</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>      <span class="k">return</span> <span class="kp">false</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">remove_loop</span>
</span><span class='line'>      <span class="n">hare</span><span class="p">,</span><span class="n">tortoise</span> <span class="o">=</span> <span class="nb">self</span><span class="p">,</span><span class="nb">self</span>
</span><span class='line'>      <span class="k">while</span> <span class="o">!</span><span class="n">hare</span><span class="o">.</span><span class="n">nil?</span> <span class="ow">and</span> <span class="o">!</span><span class="n">hare</span><span class="o">.</span><span class="n">next</span><span class="o">.</span><span class="n">nil?</span>
</span><span class='line'>          <span class="n">tortoise</span> <span class="o">=</span> <span class="n">tortoise</span><span class="o">.</span><span class="n">next</span>
</span><span class='line'>          <span class="n">hare</span> <span class="o">=</span> <span class="n">hare</span><span class="o">.</span><span class="n">next</span><span class="o">.</span><span class="n">next</span>
</span><span class='line'>          <span class="k">if</span> <span class="n">hare</span><span class="o">.</span><span class="n">eql?</span><span class="p">(</span><span class="n">tortoise</span><span class="p">)</span>
</span><span class='line'>              <span class="k">break</span>
</span><span class='line'>          <span class="k">end</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">hare</span> <span class="o">=</span> <span class="nb">self</span>
</span><span class='line'>    <span class="k">while</span> <span class="o">!</span><span class="n">tortoise</span><span class="o">.</span><span class="n">nil?</span> <span class="ow">and</span> <span class="o">!</span><span class="n">hare</span><span class="o">.</span><span class="n">eql?</span><span class="p">(</span><span class="n">tortoise</span><span class="o">.</span><span class="n">next</span><span class="p">)</span>
</span><span class='line'>      <span class="n">hare</span> <span class="o">=</span> <span class="n">hare</span><span class="o">.</span><span class="n">next</span>
</span><span class='line'>      <span class="n">tortoise</span> <span class="o">=</span> <span class="n">tortoise</span><span class="o">.</span><span class="n">next</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>    <span class="n">tortoise</span><span class="o">.</span><span class="n">next</span> <span class="o">=</span> <span class="kp">nil</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="n">test_list</span> <span class="o">=</span> <span class="no">List</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'><span class="n">test_list</span><span class="o">.</span><span class="n">next</span> <span class="o">=</span> <span class="no">List</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span>
</span><span class='line'><span class="n">test_list</span><span class="o">.</span><span class="n">next</span><span class="o">.</span><span class="n">next</span> <span class="o">=</span> <span class="no">List</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="mi">3</span><span class="p">)</span>
</span><span class='line'><span class="n">test_list</span><span class="o">.</span><span class="n">next</span><span class="o">.</span><span class="n">next</span><span class="o">.</span><span class="n">next</span> <span class="o">=</span> <span class="no">List</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="mi">4</span><span class="p">)</span>
</span><span class='line'><span class="n">test_list</span><span class="o">.</span><span class="n">next</span><span class="o">.</span><span class="n">next</span><span class="o">.</span><span class="n">next</span><span class="o">.</span><span class="n">next</span> <span class="o">=</span> <span class="no">List</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="mi">5</span><span class="p">)</span>
</span><span class='line'><span class="n">test_list</span><span class="o">.</span><span class="n">next</span><span class="o">.</span><span class="n">next</span><span class="o">.</span><span class="n">next</span><span class="o">.</span><span class="n">next</span><span class="o">.</span><span class="n">next</span> <span class="o">=</span> <span class="n">test_list</span><span class="o">.</span><span class="n">next</span><span class="o">.</span><span class="n">next</span>
</span><span class='line'>
</span><span class='line'><span class="nb">p</span> <span class="n">test_list</span><span class="o">.</span><span class="n">has_loop</span>
</span><span class='line'><span class="n">test_list</span><span class="o">.</span><span class="n">remove_loop</span>
</span><span class='line'><span class="nb">p</span> <span class="n">test_list</span><span class="o">.</span><span class="n">has_loop</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Matrix - Robot with block detection]]></title>
    <link href="http://karthikselva.in/blog/2013/05/05/matrix-robot-with-block-detection/"/>
    <updated>2013-05-05T22:35:00-07:00</updated>
    <id>http://karthikselva.in/blog/2013/05/05/matrix-robot-with-block-detection</id>
    <content type="html"><![CDATA[<figure class='code'><figcaption><span>RobotMatrix ruby (path_to_robot.rb)</span> <a href='http://karthikselva.in/downloads/code/path_to_robot.rb'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="n">realtime_grid</span> <span class="o">=</span> <span class="o">[</span>
</span><span class='line'><span class="o">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'><span class="o">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'><span class="o">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'><span class="o">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="o">]</span>
</span><span class='line'><span class="o">]</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">is_safe</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="p">,</span><span class="n">mat</span><span class="p">)</span>
</span><span class='line'>  <span class="k">return</span> <span class="n">mat</span><span class="o">[</span><span class="n">x</span><span class="o">][</span><span class="n">y</span><span class="o">].</span><span class="n">eql?</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span> <span class="p">?</span> <span class="kp">true</span> <span class="p">:</span> <span class="kp">false</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">path_finder</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="p">,</span><span class="n">mat</span><span class="p">,</span><span class="n">path</span><span class="p">)</span>
</span><span class='line'>  <span class="n">path</span> <span class="o">&lt;&lt;</span> <span class="o">[</span><span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="o">]</span>
</span><span class='line'>  <span class="k">if</span> <span class="n">x</span> <span class="o">==</span> <span class="mi">0</span> <span class="ow">and</span> <span class="n">y</span> <span class="o">==</span> <span class="mi">0</span>
</span><span class='line'>    <span class="k">return</span> <span class="kp">true</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">success</span> <span class="o">=</span> <span class="kp">false</span>
</span><span class='line'>  <span class="k">if</span> <span class="n">x</span> <span class="o">&gt;=</span> <span class="mi">1</span> <span class="ow">and</span> <span class="n">is_safe</span><span class="p">(</span><span class="n">x</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="n">y</span><span class="p">,</span><span class="n">mat</span><span class="p">)</span>
</span><span class='line'>    <span class="n">success</span> <span class="o">=</span> <span class="n">path_finder</span><span class="p">(</span><span class="n">x</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="n">y</span><span class="p">,</span><span class="n">mat</span><span class="p">,</span><span class="n">path</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span> <span class="o">!</span><span class="n">success</span> <span class="ow">and</span> <span class="n">y</span> <span class="o">&gt;=</span> <span class="mi">1</span> <span class="ow">and</span> <span class="n">is_safe</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="n">mat</span><span class="p">)</span>
</span><span class='line'>    <span class="n">success</span> <span class="o">=</span> <span class="n">path_finder</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="n">mat</span><span class="p">,</span><span class="n">path</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span> <span class="o">!</span><span class="n">success</span>
</span><span class='line'>    <span class="n">path</span><span class="o">.</span><span class="n">remove</span><span class="p">(</span><span class="o">[</span><span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">return</span> <span class="n">success</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">display</span><span class="p">(</span><span class="n">arr</span><span class="p">)</span>
</span><span class='line'>  <span class="n">arr</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">ar</span><span class="o">|</span>
</span><span class='line'>    <span class="n">ar</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">i</span><span class="o">|</span>
</span><span class='line'>      <span class="nb">print</span> <span class="n">i</span>
</span><span class='line'>      <span class="nb">print</span> <span class="s1">&#39; &#39;</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">path</span> <span class="o">=</span> <span class="o">[]</span>
</span><span class='line'><span class="n">path_finder</span><span class="p">(</span><span class="n">realtime_grid</span><span class="o">.</span><span class="n">length</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="n">realtime_grid</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="n">length</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="n">realtime_grid</span><span class="p">,</span><span class="n">path</span><span class="p">)</span>
</span><span class='line'><span class="nb">display</span><span class="p">(</span><span class="n">realtime_grid</span><span class="p">)</span>
</span><span class='line'><span class="nb">p</span> <span class="n">path</span><span class="o">.</span><span class="n">inspect</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c1">#Output:</span>
</span><span class='line'><span class="c1">#-------</span>
</span><span class='line'><span class="c1">#1 0 0 1 0</span>
</span><span class='line'><span class="c1">#1 1 0 0 0</span>
</span><span class='line'><span class="c1">#1 1 1 1 1</span>
</span><span class='line'><span class="c1">#0 0 0 0 1</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#&quot;[[3, 4], [2, 4], [2, 3], [2, 2], [2, 1], [1, 1], [1, 0], [0, 0]]&quot;</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Prime - Seive of Erastothenes]]></title>
    <link href="http://karthikselva.in/blog/2013/05/05/prime-seive-of-erastothenes/"/>
    <updated>2013-05-05T19:38:00-07:00</updated>
    <id>http://karthikselva.in/blog/2013/05/05/prime-seive-of-erastothenes</id>
    <content type="html"><![CDATA[<figure class='code'><figcaption><span>SeiveOfErastothens (seive_of_erastothenes.rb)</span> <a href='http://karthikselva.in/downloads/code/seive_of_erastothenes.rb'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="k">def</span> <span class="nf">set</span><span class="p">(</span><span class="n">array</span><span class="p">,</span><span class="n">num</span><span class="p">)</span>
</span><span class='line'>  <span class="p">((</span><span class="n">num</span><span class="o">**</span><span class="n">num</span><span class="p">)</span><span class="o">.</span><span class="n">.array</span><span class="o">.</span><span class="n">length</span><span class="p">)</span><span class="o">.</span><span class="n">step</span><span class="p">(</span><span class="n">num</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">i</span><span class="o">|</span>
</span><span class='line'>    <span class="n">array</span><span class="o">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="o">]</span> <span class="o">=</span> <span class="mi">1</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="k">return</span> <span class="n">array</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">seive</span><span class="p">(</span><span class="n">num</span><span class="p">)</span>
</span><span class='line'>  <span class="k">if</span> <span class="n">num</span> <span class="o">&lt;</span> <span class="mi">2</span>
</span><span class='line'>    <span class="k">return</span> <span class="kp">nil</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="n">a</span> <span class="o">=</span> <span class="o">[</span><span class="mi">0</span><span class="o">]*</span><span class="n">num</span>
</span><span class='line'>  <span class="p">(</span><span class="mi">1</span><span class="o">.</span><span class="n">.num</span><span class="p">)</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">i</span><span class="o">|</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">a</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">==</span> <span class="mi">0</span>
</span><span class='line'>      <span class="nb">puts</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>      <span class="n">a</span><span class="o">=</span><span class="n">set</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">return</span> <span class="n">a</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="nb">p</span> <span class="n">seive</span><span class="p">(</span><span class="mi">50</span><span class="p">)</span><span class="o">.</span><span class="n">inspect</span>
</span><span class='line'><span class="c1">##Output</span>
</span><span class='line'><span class="c1">#2</span>
</span><span class='line'><span class="c1">#3</span>
</span><span class='line'><span class="c1">#5</span>
</span><span class='line'><span class="c1">#7</span>
</span><span class='line'><span class="c1">#9</span>
</span><span class='line'><span class="c1">#11</span>
</span><span class='line'><span class="c1">#13</span>
</span><span class='line'><span class="c1">#15</span>
</span><span class='line'><span class="c1">#17</span>
</span><span class='line'><span class="c1">#19</span>
</span><span class='line'><span class="c1">#21</span>
</span><span class='line'><span class="c1">#23</span>
</span><span class='line'><span class="c1">#25</span>
</span><span class='line'><span class="c1">#29</span>
</span><span class='line'><span class="c1">#31</span>
</span><span class='line'><span class="c1">#35</span>
</span><span class='line'><span class="c1">#37</span>
</span><span class='line'><span class="c1">#41</span>
</span><span class='line'><span class="c1">#43</span>
</span><span class='line'><span class="c1">#47</span>
</span><span class='line'><span class="c1">#49</span>
</span><span class='line'><span class="c1">#&quot;[0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1]&quot;</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Matrix - Rotate a matrix 90* to Right]]></title>
    <link href="http://karthikselva.in/blog/2013/05/05/matrix-rotate-a-matrix-90-star-to-right/"/>
    <updated>2013-05-05T02:17:00-07:00</updated>
    <id>http://karthikselva.in/blog/2013/05/05/matrix-rotate-a-matrix-90-star-to-right</id>
    <content type="html"><![CDATA[<figure class='code'><figcaption><span>Rotate ruby (rotate_matrix.rb)</span> <a href='http://karthikselva.in/downloads/code/rotate_matrix.rb'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="n">mat</span> <span class="o">=</span> <span class="o">[</span>
</span><span class='line'>    <span class="o">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>    <span class="o">[</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="mi">8</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>    <span class="o">[</span><span class="mi">9</span><span class="p">,</span><span class="mi">10</span><span class="p">,</span><span class="mi">11</span><span class="p">,</span><span class="mi">12</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>    <span class="o">[</span><span class="mi">13</span><span class="p">,</span><span class="mi">14</span><span class="p">,</span><span class="mi">15</span><span class="p">,</span><span class="mi">16</span><span class="o">]</span>
</span><span class='line'>    <span class="o">]</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">rotate</span><span class="p">(</span><span class="n">img</span><span class="p">)</span>
</span><span class='line'>  <span class="n">n</span> <span class="o">=</span> <span class="n">img</span><span class="o">.</span><span class="n">length</span>
</span><span class='line'>  <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="n">.</span><span class="p">(</span><span class="n">n</span><span class="o">/</span><span class="mi">2</span><span class="p">))</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">layer</span><span class="o">|</span>
</span><span class='line'>    <span class="n">first</span> <span class="o">=</span> <span class="n">layer</span>
</span><span class='line'>    <span class="n">last</span> <span class="o">=</span> <span class="n">n</span> <span class="o">-</span> <span class="n">layer</span> <span class="o">-</span> <span class="mi">1</span>
</span><span class='line'>    <span class="p">(</span><span class="n">first</span><span class="o">.</span><span class="n">.</span><span class="o">.</span><span class="n">last</span><span class="p">)</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">i</span><span class="o">|</span>
</span><span class='line'>      <span class="n">last_offset</span> <span class="o">=</span> <span class="n">last</span> <span class="o">-</span> <span class="p">(</span> <span class="n">i</span> <span class="o">-</span> <span class="n">first</span> <span class="p">)</span>
</span><span class='line'>      <span class="n">tmp</span> <span class="o">=</span> <span class="n">img</span><span class="o">[</span><span class="n">first</span><span class="o">][</span><span class="n">i</span><span class="o">]</span>
</span><span class='line'>      <span class="n">img</span><span class="o">[</span><span class="n">first</span><span class="o">][</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="n">img</span><span class="o">[</span><span class="n">last_offset</span><span class="o">][</span><span class="n">first</span><span class="o">]</span>
</span><span class='line'>      <span class="n">img</span><span class="o">[</span><span class="n">last_offset</span><span class="o">][</span><span class="n">first</span><span class="o">]</span> <span class="o">=</span> <span class="n">img</span><span class="o">[</span><span class="n">last</span><span class="o">][</span><span class="n">last_offset</span><span class="o">]</span>
</span><span class='line'>      <span class="n">img</span><span class="o">[</span><span class="n">last</span><span class="o">][</span><span class="n">last_offset</span><span class="o">]</span> <span class="o">=</span> <span class="n">img</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">last</span><span class="o">]</span>
</span><span class='line'>      <span class="n">img</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">last</span><span class="o">]</span> <span class="o">=</span> <span class="n">tmp</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">display</span><span class="p">(</span><span class="n">arr</span><span class="p">)</span>
</span><span class='line'>  <span class="n">arr</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">ar</span><span class="o">|</span>
</span><span class='line'>    <span class="n">ar</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">i</span><span class="o">|</span>
</span><span class='line'>      <span class="nb">print</span> <span class="n">i</span>
</span><span class='line'>      <span class="nb">print</span> <span class="s1">&#39; &#39;</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="nb">p</span> <span class="s2">&quot; Input Matrix &quot;</span>
</span><span class='line'><span class="nb">display</span><span class="p">(</span><span class="n">mat</span><span class="p">)</span>
</span><span class='line'><span class="n">rotate</span><span class="p">(</span><span class="n">mat</span><span class="p">)</span>
</span><span class='line'><span class="nb">p</span> <span class="s2">&quot; Rotated Matrix (90* to right)&quot;</span>
</span><span class='line'><span class="nb">display</span><span class="p">(</span><span class="n">mat</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Output: </span>
</span><span class='line'><span class="c1">#</span>
</span><span class='line'><span class="c1">#&quot; Input Matrix &quot;</span>
</span><span class='line'><span class="c1">#1 2 3 4</span>
</span><span class='line'><span class="c1">#5 6 7 8</span>
</span><span class='line'><span class="c1">#9 10 11 12</span>
</span><span class='line'><span class="c1">#13 14 15 16</span>
</span><span class='line'><span class="c1">#&quot; Rotated Matrix (90* to right)&quot;</span>
</span><span class='line'><span class="c1">#13 9 5 1</span>
</span><span class='line'><span class="c1">#14 10 6 2</span>
</span><span class='line'><span class="c1">#15 11 7 3</span>
</span><span class='line'><span class="c1">#16 12 8 4</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Array - Maximum Subsequence with start and end of index]]></title>
    <link href="http://karthikselva.in/blog/2013/04/17/array-maximum-subsequence-with-start-and-end-of-index/"/>
    <updated>2013-04-17T23:53:00-07:00</updated>
    <id>http://karthikselva.in/blog/2013/04/17/array-maximum-subsequence-with-start-and-end-of-index</id>
    <content type="html"><![CDATA[<figure class='code'><figcaption><span>MaximumSubsequence ruby (maximum_subsequence.rb)</span> <a href='http://karthikselva.in/downloads/code/maximum_subsequence.rb'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="n">arr</span> <span class="o">=</span> <span class="o">[</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="mi">8</span><span class="p">,</span><span class="o">-</span><span class="mi">3</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="o">-</span><span class="mi">4</span><span class="p">,</span><span class="o">-</span><span class="mi">2</span><span class="p">,</span><span class="mi">9</span><span class="p">,</span><span class="o">-</span><span class="mi">2</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="o">-</span><span class="mi">5</span><span class="o">]</span>
</span><span class='line'>
</span><span class='line'><span class="n">start</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'><span class="n">ending</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'><span class="n">maxsofar</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'><span class="n">maxendinghere</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">max</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="n">j</span><span class="p">)</span>
</span><span class='line'>  <span class="k">if</span> <span class="n">i</span> <span class="o">&gt;</span> <span class="n">j</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">i</span>
</span><span class='line'>  <span class="k">else</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">j</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">arr</span><span class="o">.</span><span class="n">each_with_index</span> <span class="k">do</span> <span class="o">|</span><span class="n">val</span><span class="p">,</span><span class="n">i</span><span class="o">|</span>
</span><span class='line'>  <span class="n">maxendinghere</span> <span class="o">=</span> <span class="n">max</span><span class="p">(</span><span class="n">maxendinghere</span> <span class="o">+</span> <span class="n">val</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>  <span class="k">if</span> <span class="n">maxendinghere</span> <span class="o">&gt;</span> <span class="n">maxsofar</span>
</span><span class='line'>    <span class="n">ending</span> <span class="o">=</span> <span class="n">i</span>
</span><span class='line'>    <span class="n">maxsofar</span> <span class="o">=</span> <span class="n">maxendinghere</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">sum</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'><span class="c1"># Backtrack to find the start </span>
</span><span class='line'><span class="c1"># Another n traversal =&gt; 2n :: O(n)</span>
</span><span class='line'><span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="n">.ending</span><span class="p">)</span><span class="o">.</span><span class="n">to_a</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">from_end</span><span class="o">|</span>
</span><span class='line'>  <span class="n">sum</span> <span class="o">+=</span> <span class="n">arr</span><span class="o">[</span><span class="n">ending</span> <span class="o">-</span> <span class="n">from_end</span><span class="o">]</span>
</span><span class='line'>  <span class="k">if</span> <span class="n">sum</span> <span class="o">==</span> <span class="n">maxsofar</span>
</span><span class='line'>    <span class="n">start</span> <span class="o">=</span> <span class="n">arr</span><span class="o">.</span><span class="n">length</span> <span class="o">-</span> <span class="n">from_end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="nb">p</span> <span class="s2">&quot; starting from index: </span><span class="si">#{</span><span class="n">start</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'><span class="nb">p</span> <span class="s2">&quot; ending at index: </span><span class="si">#{</span><span class="n">ending</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'><span class="nb">p</span> <span class="s2">&quot;Maximum sum is: </span><span class="si">#{</span><span class="n">maxsofar</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'><span class="c1"># Output:</span>
</span><span class='line'><span class="c1">#&quot; starting from index: 3&quot;</span>
</span><span class='line'><span class="c1">#&quot; ending at index: 12&quot;</span>
</span><span class='line'><span class="c1">#&quot;Maximum sum is: 24&quot;</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Bit Manipulation - Merge m bits into n bits at given i and j]]></title>
    <link href="http://karthikselva.in/blog/2013/04/11/bit-manipulation-merge-m-bits-into-n-bits-at-given-i-and-j/"/>
    <updated>2013-04-11T18:03:00-07:00</updated>
    <id>http://karthikselva.in/blog/2013/04/11/bit-manipulation-merge-m-bits-into-n-bits-at-given-i-and-j</id>
    <content type="html"><![CDATA[<figure class='code'><figcaption><span>MergeMBits (merge_m_to_n_bit.rb)</span> <a href='http://karthikselva.in/downloads/code/merge_m_to_n_bit.rb'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="k">def</span> <span class="nf">clear_and_set</span><span class="p">(</span><span class="n">n</span><span class="p">,</span><span class="n">m</span><span class="p">,</span><span class="n">i</span><span class="p">,</span><span class="n">j</span><span class="p">)</span>
</span><span class='line'>  <span class="k">if</span> <span class="n">j</span> <span class="o">&gt;=</span> <span class="n">n</span><span class="o">.</span><span class="n">length</span> <span class="ow">or</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">0</span>
</span><span class='line'>      <span class="k">return</span> <span class="s1">&#39;ERROR&#39;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="c1"># Create a mask of all 1&#39;s</span>
</span><span class='line'>  <span class="n">mask</span> <span class="o">=</span> <span class="p">(</span><span class="mi">1</span> <span class="o">&lt;&lt;</span> <span class="p">(</span><span class="n">n</span><span class="o">.</span><span class="n">length</span><span class="o">+</span><span class="mi">1</span><span class="p">))</span> <span class="o">-</span> <span class="mi">1</span>
</span><span class='line'>  <span class="c1"># Create right mask with ones only till end</span>
</span><span class='line'>  <span class="n">right</span> <span class="o">=</span> <span class="p">(</span><span class="mi">1</span> <span class="o">&lt;&lt;</span> <span class="p">(</span><span class="n">n</span><span class="o">.</span><span class="n">length</span><span class="o">-</span><span class="n">j</span><span class="p">))</span> <span class="o">-</span><span class="mi">1</span>
</span><span class='line'>  <span class="c1"># Shift the mask till &#39;i&#39; and merge with right</span>
</span><span class='line'>  <span class="n">mask</span> <span class="o">=</span> <span class="p">((</span><span class="n">mask</span> <span class="o">&lt;&lt;</span> <span class="p">(</span><span class="n">j</span><span class="o">-</span><span class="n">i</span><span class="p">))</span> <span class="o">&lt;&lt;</span> <span class="p">(</span><span class="n">n</span><span class="o">.</span><span class="n">length</span><span class="o">-</span><span class="n">j</span><span class="p">))</span> <span class="o">|</span> <span class="n">right</span>
</span><span class='line'>  <span class="c1"># Reset all these bits at &#39;n&#39;</span>
</span><span class='line'>  <span class="n">cleard</span> <span class="o">=</span> <span class="n">n</span><span class="o">.</span><span class="n">to_i</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span> <span class="o">&amp;</span> <span class="n">mask</span>
</span><span class='line'>  <span class="c1"># Prepare m for appropriate place</span>
</span><span class='line'>  <span class="n">m</span> <span class="o">=</span> <span class="p">(</span><span class="n">m</span><span class="o">.</span><span class="n">to_i</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="p">(</span><span class="n">n</span><span class="o">.</span><span class="n">length</span><span class="o">-</span><span class="n">j</span><span class="o">-</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>  <span class="c1"># Merge &#39;m&#39; into &#39;n&#39;</span>
</span><span class='line'>  <span class="n">cleard</span> <span class="o">=</span> <span class="n">cleard</span> <span class="o">|</span> <span class="n">m</span>
</span><span class='line'>  <span class="k">return</span> <span class="n">cleard</span><span class="o">.</span><span class="n">to_s</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="nb">p</span> <span class="n">clear_and_set</span><span class="p">(</span><span class="s1">&#39;100000000&#39;</span><span class="p">,</span><span class="s1">&#39;10011&#39;</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">6</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Output:</span>
</span><span class='line'><span class="c1"># karthiks-MacBook-Pro-2:code karthikselvakumarbhuvaneswaran$ ruby merge_m_to_n_bit.rb</span>
</span><span class='line'><span class="c1"># &quot;101001100&quot;</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Bit Manipulation - Floating Decimal to Binary]]></title>
    <link href="http://karthikselva.in/blog/2013/04/11/bit-manipulation-floating-decimal-to-binary/"/>
    <updated>2013-04-11T17:33:00-07:00</updated>
    <id>http://karthikselva.in/blog/2013/04/11/bit-manipulation-floating-decimal-to-binary</id>
    <content type="html"><![CDATA[<figure class='code'><figcaption><span>decimal_to_binary (decimal_to_binary.rb)</span> <a href='http://karthikselva.in/downloads/code/decimal_to_binary.rb'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
<span class='line-number'>166</span>
<span class='line-number'>167</span>
<span class='line-number'>168</span>
<span class='line-number'>169</span>
<span class='line-number'>170</span>
<span class='line-number'>171</span>
<span class='line-number'>172</span>
<span class='line-number'>173</span>
<span class='line-number'>174</span>
<span class='line-number'>175</span>
<span class='line-number'>176</span>
<span class='line-number'>177</span>
<span class='line-number'>178</span>
<span class='line-number'>179</span>
<span class='line-number'>180</span>
<span class='line-number'>181</span>
<span class='line-number'>182</span>
<span class='line-number'>183</span>
<span class='line-number'>184</span>
<span class='line-number'>185</span>
<span class='line-number'>186</span>
<span class='line-number'>187</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="k">def</span> <span class="nf">print_binary</span><span class="p">(</span><span class="n">n</span><span class="p">)</span>
</span><span class='line'>  <span class="k">if</span> <span class="n">n</span> <span class="o">&gt;=</span> <span class="mi">1</span> <span class="ow">or</span> <span class="n">n</span> <span class="o">&lt;=</span> <span class="mi">0</span>
</span><span class='line'>      <span class="k">return</span> <span class="s2">&quot;ERROR&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="n">res</span> <span class="o">=</span> <span class="s1">&#39;.&#39;</span>
</span><span class='line'>  <span class="k">while</span> <span class="n">n</span> <span class="o">&gt;</span> <span class="mi">0</span>
</span><span class='line'>      <span class="nb">p</span> <span class="n">n</span>
</span><span class='line'>      <span class="nb">p</span> <span class="n">res</span>
</span><span class='line'>      <span class="k">if</span> <span class="n">res</span><span class="o">.</span><span class="n">length</span> <span class="o">&gt;</span> <span class="mi">32</span>
</span><span class='line'>          <span class="k">return</span> <span class="s1">&#39;ERROR&#39;</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>      <span class="n">r</span> <span class="o">=</span> <span class="n">n</span> <span class="o">*</span> <span class="mi">2</span>
</span><span class='line'>      <span class="k">if</span> <span class="n">r</span> <span class="o">&gt;=</span> <span class="mi">1</span>
</span><span class='line'>          <span class="n">res</span> <span class="o">&lt;&lt;</span> <span class="s1">&#39;1&#39;</span>
</span><span class='line'>          <span class="n">n</span> <span class="o">=</span> <span class="n">r</span><span class="o">-</span><span class="mi">1</span>
</span><span class='line'>      <span class="k">else</span>
</span><span class='line'>          <span class="n">res</span> <span class="o">&lt;&lt;</span> <span class="s1">&#39;0&#39;</span>
</span><span class='line'>          <span class="n">n</span> <span class="o">=</span> <span class="n">r</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="k">return</span> <span class="n">res</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">print_frac_binary</span><span class="p">(</span><span class="n">n</span><span class="p">)</span>
</span><span class='line'>  <span class="k">if</span> <span class="n">n</span> <span class="o">&gt;=</span> <span class="mi">1</span> <span class="ow">or</span> <span class="n">n</span> <span class="o">&lt;=</span> <span class="mi">0</span>
</span><span class='line'>      <span class="k">return</span> <span class="s2">&quot;ERROR&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="n">res</span> <span class="o">=</span> <span class="s1">&#39;.&#39;</span>
</span><span class='line'>  <span class="n">frac</span> <span class="o">=</span> <span class="mi">0</span><span class="o">.</span><span class="mi">5</span>
</span><span class='line'>  <span class="k">while</span> <span class="n">n</span> <span class="o">&gt;</span> <span class="mi">0</span>
</span><span class='line'>      <span class="nb">p</span> <span class="n">n</span>
</span><span class='line'>      <span class="nb">p</span> <span class="n">res</span>
</span><span class='line'>      <span class="k">if</span> <span class="n">res</span><span class="o">.</span><span class="n">length</span> <span class="o">&gt;</span> <span class="mi">32</span>
</span><span class='line'>          <span class="k">return</span> <span class="s1">&#39;ERROR&#39;</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>      <span class="k">if</span> <span class="n">n</span> <span class="o">&gt;=</span> <span class="n">frac</span>
</span><span class='line'>          <span class="n">res</span> <span class="o">&lt;&lt;</span> <span class="s1">&#39;1&#39;</span>
</span><span class='line'>          <span class="n">n</span> <span class="o">=</span> <span class="n">n</span> <span class="o">-</span> <span class="n">frac</span>
</span><span class='line'>      <span class="k">else</span>
</span><span class='line'>          <span class="n">res</span> <span class="o">&lt;&lt;</span> <span class="s1">&#39;0&#39;</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>      <span class="n">frac</span> <span class="o">/=</span> <span class="mi">2</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="k">return</span> <span class="n">res</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="nb">p</span> <span class="n">print_binary</span><span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mi">78</span><span class="p">)</span>
</span><span class='line'><span class="nb">p</span> <span class="s2">&quot;---------------------&quot;</span>
</span><span class='line'><span class="nb">p</span> <span class="n">print_frac_binary</span><span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mi">78</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Output:</span>
</span><span class='line'><span class="c1"># karthiks-MacBook-Pro-2:code karthikselvakumarbhuvaneswaran$ ruby decimal_in_binary.rb</span>
</span><span class='line'><span class="c1"># 0.78</span>
</span><span class='line'><span class="c1"># &quot;.&quot;</span>
</span><span class='line'><span class="c1"># 0.56</span>
</span><span class='line'><span class="c1"># &quot;.1&quot;</span>
</span><span class='line'><span class="c1"># 0.1200000000000001</span>
</span><span class='line'><span class="c1"># &quot;.11&quot;</span>
</span><span class='line'><span class="c1"># 0.2400000000000002</span>
</span><span class='line'><span class="c1"># &quot;.110&quot;</span>
</span><span class='line'><span class="c1"># 0.4800000000000004</span>
</span><span class='line'><span class="c1"># &quot;.1100&quot;</span>
</span><span class='line'><span class="c1"># 0.9600000000000009</span>
</span><span class='line'><span class="c1"># &quot;.11000&quot;</span>
</span><span class='line'><span class="c1"># 0.9200000000000017</span>
</span><span class='line'><span class="c1"># &quot;.110001&quot;</span>
</span><span class='line'><span class="c1"># 0.8400000000000034</span>
</span><span class='line'><span class="c1"># &quot;.1100011&quot;</span>
</span><span class='line'><span class="c1"># 0.6800000000000068</span>
</span><span class='line'><span class="c1"># &quot;.11000111&quot;</span>
</span><span class='line'><span class="c1"># 0.36000000000001364</span>
</span><span class='line'><span class="c1"># &quot;.110001111&quot;</span>
</span><span class='line'><span class="c1"># 0.7200000000000273</span>
</span><span class='line'><span class="c1"># &quot;.1100011110&quot;</span>
</span><span class='line'><span class="c1"># 0.44000000000005457</span>
</span><span class='line'><span class="c1"># &quot;.11000111101&quot;</span>
</span><span class='line'><span class="c1"># 0.8800000000001091</span>
</span><span class='line'><span class="c1"># &quot;.110001111010&quot;</span>
</span><span class='line'><span class="c1"># 0.7600000000002183</span>
</span><span class='line'><span class="c1"># &quot;.1100011110101&quot;</span>
</span><span class='line'><span class="c1"># 0.5200000000004366</span>
</span><span class='line'><span class="c1"># &quot;.11000111101011&quot;</span>
</span><span class='line'><span class="c1"># 0.040000000000873115</span>
</span><span class='line'><span class="c1"># &quot;.110001111010111&quot;</span>
</span><span class='line'><span class="c1"># 0.08000000000174623</span>
</span><span class='line'><span class="c1"># &quot;.1100011110101110&quot;</span>
</span><span class='line'><span class="c1"># 0.16000000000349246</span>
</span><span class='line'><span class="c1"># &quot;.11000111101011100&quot;</span>
</span><span class='line'><span class="c1"># 0.3200000000069849</span>
</span><span class='line'><span class="c1"># &quot;.110001111010111000&quot;</span>
</span><span class='line'><span class="c1"># 0.6400000000139698</span>
</span><span class='line'><span class="c1"># &quot;.1100011110101110000&quot;</span>
</span><span class='line'><span class="c1"># 0.2800000000279397</span>
</span><span class='line'><span class="c1"># &quot;.11000111101011100001&quot;</span>
</span><span class='line'><span class="c1"># 0.5600000000558794</span>
</span><span class='line'><span class="c1"># &quot;.110001111010111000010&quot;</span>
</span><span class='line'><span class="c1"># 0.12000000011175871</span>
</span><span class='line'><span class="c1"># &quot;.1100011110101110000101&quot;</span>
</span><span class='line'><span class="c1"># 0.24000000022351742</span>
</span><span class='line'><span class="c1"># &quot;.11000111101011100001010&quot;</span>
</span><span class='line'><span class="c1"># 0.48000000044703484</span>
</span><span class='line'><span class="c1"># &quot;.110001111010111000010100&quot;</span>
</span><span class='line'><span class="c1"># 0.9600000008940697</span>
</span><span class='line'><span class="c1"># &quot;.1100011110101110000101000&quot;</span>
</span><span class='line'><span class="c1"># 0.9200000017881393</span>
</span><span class='line'><span class="c1"># &quot;.11000111101011100001010001&quot;</span>
</span><span class='line'><span class="c1"># 0.8400000035762787</span>
</span><span class='line'><span class="c1"># &quot;.110001111010111000010100011&quot;</span>
</span><span class='line'><span class="c1"># 0.6800000071525574</span>
</span><span class='line'><span class="c1"># &quot;.1100011110101110000101000111&quot;</span>
</span><span class='line'><span class="c1"># 0.36000001430511475</span>
</span><span class='line'><span class="c1"># &quot;.11000111101011100001010001111&quot;</span>
</span><span class='line'><span class="c1"># 0.7200000286102295</span>
</span><span class='line'><span class="c1"># &quot;.110001111010111000010100011110&quot;</span>
</span><span class='line'><span class="c1"># 0.440000057220459</span>
</span><span class='line'><span class="c1"># &quot;.1100011110101110000101000111101&quot;</span>
</span><span class='line'><span class="c1"># 0.880000114440918</span>
</span><span class='line'><span class="c1"># &quot;.11000111101011100001010001111010&quot;</span>
</span><span class='line'><span class="c1"># &quot;ERROR&quot;</span>
</span><span class='line'><span class="c1"># &quot;---------------------&quot;</span>
</span><span class='line'><span class="c1"># 0.78</span>
</span><span class='line'><span class="c1"># &quot;.&quot;</span>
</span><span class='line'><span class="c1"># 0.28</span>
</span><span class='line'><span class="c1"># &quot;.1&quot;</span>
</span><span class='line'><span class="c1"># 0.030000000000000027</span>
</span><span class='line'><span class="c1"># &quot;.11&quot;</span>
</span><span class='line'><span class="c1"># 0.030000000000000027</span>
</span><span class='line'><span class="c1"># &quot;.110&quot;</span>
</span><span class='line'><span class="c1"># 0.030000000000000027</span>
</span><span class='line'><span class="c1"># &quot;.1100&quot;</span>
</span><span class='line'><span class="c1"># 0.030000000000000027</span>
</span><span class='line'><span class="c1"># &quot;.11000&quot;</span>
</span><span class='line'><span class="c1"># 0.014375000000000027</span>
</span><span class='line'><span class="c1"># &quot;.110001&quot;</span>
</span><span class='line'><span class="c1"># 0.006562500000000027</span>
</span><span class='line'><span class="c1"># &quot;.1100011&quot;</span>
</span><span class='line'><span class="c1"># 0.0026562500000000266</span>
</span><span class='line'><span class="c1"># &quot;.11000111&quot;</span>
</span><span class='line'><span class="c1"># 0.0007031250000000266</span>
</span><span class='line'><span class="c1"># &quot;.110001111&quot;</span>
</span><span class='line'><span class="c1"># 0.0007031250000000266</span>
</span><span class='line'><span class="c1"># &quot;.1100011110&quot;</span>
</span><span class='line'><span class="c1"># 0.00021484375000002665</span>
</span><span class='line'><span class="c1"># &quot;.11000111101&quot;</span>
</span><span class='line'><span class="c1"># 0.00021484375000002665</span>
</span><span class='line'><span class="c1"># &quot;.110001111010&quot;</span>
</span><span class='line'><span class="c1"># 9.277343750002665e-05</span>
</span><span class='line'><span class="c1"># &quot;.1100011110101&quot;</span>
</span><span class='line'><span class="c1"># 3.1738281250026645e-05</span>
</span><span class='line'><span class="c1"># &quot;.11000111101011&quot;</span>
</span><span class='line'><span class="c1"># 1.2207031250266454e-06</span>
</span><span class='line'><span class="c1"># &quot;.110001111010111&quot;</span>
</span><span class='line'><span class="c1"># 1.2207031250266454e-06</span>
</span><span class='line'><span class="c1"># &quot;.1100011110101110&quot;</span>
</span><span class='line'><span class="c1"># 1.2207031250266454e-06</span>
</span><span class='line'><span class="c1"># &quot;.11000111101011100&quot;</span>
</span><span class='line'><span class="c1"># 1.2207031250266454e-06</span>
</span><span class='line'><span class="c1"># &quot;.110001111010111000&quot;</span>
</span><span class='line'><span class="c1"># 1.2207031250266454e-06</span>
</span><span class='line'><span class="c1"># &quot;.1100011110101110000&quot;</span>
</span><span class='line'><span class="c1"># 2.6702880862039535e-07</span>
</span><span class='line'><span class="c1"># &quot;.11000111101011100001&quot;</span>
</span><span class='line'><span class="c1"># 2.6702880862039535e-07</span>
</span><span class='line'><span class="c1"># &quot;.110001111010111000010&quot;</span>
</span><span class='line'><span class="c1"># 2.8610229518832853e-08</span>
</span><span class='line'><span class="c1"># &quot;.1100011110101110000101&quot;</span>
</span><span class='line'><span class="c1"># 2.8610229518832853e-08</span>
</span><span class='line'><span class="c1"># &quot;.11000111101011100001010&quot;</span>
</span><span class='line'><span class="c1"># 2.8610229518832853e-08</span>
</span><span class='line'><span class="c1"># &quot;.110001111010111000010100&quot;</span>
</span><span class='line'><span class="c1"># 2.8610229518832853e-08</span>
</span><span class='line'><span class="c1"># &quot;.1100011110101110000101000&quot;</span>
</span><span class='line'><span class="c1"># 1.3709068324985196e-08</span>
</span><span class='line'><span class="c1"># &quot;.11000111101011100001010001&quot;</span>
</span><span class='line'><span class="c1"># 6.258487728061368e-09</span>
</span><span class='line'><span class="c1"># &quot;.110001111010111000010100011&quot;</span>
</span><span class='line'><span class="c1"># 2.533197429599454e-09</span>
</span><span class='line'><span class="c1"># &quot;.1100011110101110000101000111&quot;</span>
</span><span class='line'><span class="c1"># 6.705522803684971e-10</span>
</span><span class='line'><span class="c1"># &quot;.11000111101011100001010001111&quot;</span>
</span><span class='line'><span class="c1"># 6.705522803684971e-10</span>
</span><span class='line'><span class="c1"># &quot;.110001111010111000010100011110&quot;</span>
</span><span class='line'><span class="c1"># 2.0489099306075786e-10</span>
</span><span class='line'><span class="c1"># &quot;.1100011110101110000101000111101&quot;</span>
</span><span class='line'><span class="c1"># 2.0489099306075786e-10</span>
</span><span class='line'><span class="c1"># &quot;.11000111101011100001010001111010&quot;</span>
</span><span class='line'><span class="c1"># &quot;ERROR&quot;</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Linked List - kth element from last - Recursion ]]></title>
    <link href="http://karthikselva.in/blog/2013/04/11/linked-list-kth-element-from-last-recursion/"/>
    <updated>2013-04-11T03:01:00-07:00</updated>
    <id>http://karthikselva.in/blog/2013/04/11/linked-list-kth-element-from-last-recursion</id>
    <content type="html"><![CDATA[<figure class='code'><figcaption><span>KthELementList ruby (kth_element_in_list.rb)</span> <a href='http://karthikselva.in/downloads/code/kth_element_in_list.rb'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="k">class</span> <span class="nc">List</span>
</span><span class='line'>  <span class="kp">attr_accessor</span> <span class="ss">:next</span> <span class="p">,</span> <span class="ss">:data</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">d</span><span class="p">)</span>
</span><span class='line'>      <span class="nb">self</span><span class="o">.</span><span class="n">data</span> <span class="o">=</span> <span class="n">d</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">print_list</span>
</span><span class='line'>      <span class="n">root</span> <span class="o">=</span> <span class="nb">self</span>
</span><span class='line'>      <span class="k">while</span> <span class="o">!</span><span class="n">root</span><span class="o">.</span><span class="n">nil?</span>
</span><span class='line'>          <span class="nb">print</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">root</span><span class="o">.</span><span class="n">data</span><span class="si">}</span><span class="s2"> =&gt; &quot;</span>
</span><span class='line'>          <span class="n">root</span> <span class="o">=</span> <span class="n">root</span><span class="o">.</span><span class="n">next</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>      <span class="nb">p</span> <span class="s2">&quot;NULL&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">kth_element</span><span class="p">(</span><span class="n">node</span><span class="p">,</span><span class="n">k</span><span class="p">,</span><span class="n">l</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>      <span class="k">return</span> <span class="kp">nil</span> <span class="k">if</span> <span class="n">node</span><span class="o">.</span><span class="n">nil?</span>
</span><span class='line'>      <span class="n">list</span> <span class="o">=</span> <span class="n">kth_element</span><span class="p">(</span><span class="n">node</span><span class="o">.</span><span class="n">next</span><span class="p">,</span><span class="n">k</span><span class="p">,</span><span class="n">l</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'>      <span class="k">if</span> <span class="n">k</span> <span class="o">==</span> <span class="n">l</span>
</span><span class='line'>          <span class="k">return</span> <span class="n">node</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">list</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="n">test_list</span> <span class="o">=</span> <span class="no">List</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'><span class="n">test_list</span><span class="o">.</span><span class="n">next</span> <span class="o">=</span> <span class="no">List</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span>
</span><span class='line'><span class="n">test_list</span><span class="o">.</span><span class="n">next</span><span class="o">.</span><span class="n">next</span> <span class="o">=</span> <span class="no">List</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="mi">3</span><span class="p">)</span>
</span><span class='line'><span class="n">test_list</span><span class="o">.</span><span class="n">next</span><span class="o">.</span><span class="n">next</span><span class="o">.</span><span class="n">next</span> <span class="o">=</span> <span class="no">List</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span>
</span><span class='line'><span class="n">test_list</span><span class="o">.</span><span class="n">next</span><span class="o">.</span><span class="n">next</span><span class="o">.</span><span class="n">next</span><span class="o">.</span><span class="n">next</span> <span class="o">=</span> <span class="no">List</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="nb">p</span> <span class="n">test_list</span><span class="o">.</span><span class="n">kth_element</span><span class="p">(</span><span class="n">test_list</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span><span class="o">.</span><span class="n">data</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#Output:</span>
</span><span class='line'><span class="c1"># karthiks-MacBook-Pro-2:code karthikselvakumarbhuvaneswaran$ ruby kth_element_in_list.rb</span>
</span><span class='line'><span class="c1"># =&gt; 3</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Linked List - Find Palindrome ina linked list]]></title>
    <link href="http://karthikselva.in/blog/2013/04/11/linked-list-find-palindrome-ina-linked-list/"/>
    <updated>2013-04-11T02:53:00-07:00</updated>
    <id>http://karthikselva.in/blog/2013/04/11/linked-list-find-palindrome-ina-linked-list</id>
    <content type="html"><![CDATA[<figure class='code'><figcaption><span>ListPalindrome ruby (palindrome_list.rb)</span> <a href='http://karthikselva.in/downloads/code/palindrome_list.rb'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="k">class</span> <span class="nc">List</span>
</span><span class='line'>  <span class="kp">attr_accessor</span> <span class="ss">:next</span> <span class="p">,</span> <span class="ss">:data</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">d</span><span class="p">)</span>
</span><span class='line'>      <span class="nb">self</span><span class="o">.</span><span class="n">data</span> <span class="o">=</span> <span class="n">d</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">print_list</span>
</span><span class='line'>      <span class="n">root</span> <span class="o">=</span> <span class="nb">self</span>
</span><span class='line'>      <span class="k">while</span> <span class="o">!</span><span class="n">root</span><span class="o">.</span><span class="n">nil?</span>
</span><span class='line'>          <span class="nb">print</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">root</span><span class="o">.</span><span class="n">data</span><span class="si">}</span><span class="s2"> =&gt; &quot;</span>
</span><span class='line'>          <span class="n">root</span> <span class="o">=</span> <span class="n">root</span><span class="o">.</span><span class="n">next</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>      <span class="nb">p</span> <span class="s2">&quot;NULL&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">find_length</span>
</span><span class='line'>      <span class="n">root</span> <span class="o">=</span> <span class="nb">self</span>
</span><span class='line'>      <span class="n">l</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>      <span class="k">while</span> <span class="o">!</span><span class="n">root</span><span class="o">.</span><span class="n">nil?</span>
</span><span class='line'>          <span class="n">l</span> <span class="o">+=</span> <span class="mi">1</span>
</span><span class='line'>          <span class="n">root</span> <span class="o">=</span> <span class="n">root</span><span class="o">.</span><span class="n">next</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">l</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">is_palindrome</span>
</span><span class='line'>      <span class="n">st</span> <span class="o">=</span> <span class="o">[]</span>
</span><span class='line'>      <span class="n">node</span> <span class="o">=</span> <span class="nb">self</span>
</span><span class='line'>      <span class="n">l</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>      <span class="k">while</span> <span class="o">!</span><span class="n">node</span><span class="o">.</span><span class="n">nil?</span>
</span><span class='line'>          <span class="k">if</span> <span class="n">l</span> <span class="o">&lt;=</span> <span class="p">(</span><span class="n">find_length</span><span class="o">/</span><span class="mi">2</span><span class="p">)</span>
</span><span class='line'>              <span class="n">st</span><span class="o">.</span><span class="n">push</span><span class="p">(</span><span class="n">node</span><span class="o">.</span><span class="n">data</span><span class="p">)</span>
</span><span class='line'>          <span class="k">end</span>
</span><span class='line'>          
</span><span class='line'>          <span class="k">if</span> <span class="n">l</span> <span class="o">&gt;=</span> <span class="p">(</span><span class="n">find_length</span><span class="o">/</span><span class="mi">2</span><span class="p">)</span> <span class="ow">and</span> <span class="n">st</span><span class="o">[-</span><span class="mi">1</span><span class="o">].</span><span class="n">eql?</span><span class="p">(</span><span class="n">node</span><span class="o">.</span><span class="n">data</span><span class="p">)</span>
</span><span class='line'>              <span class="n">st</span><span class="o">.</span><span class="n">pop</span><span class="p">()</span>
</span><span class='line'>          <span class="k">end</span>
</span><span class='line'>          <span class="n">node</span> <span class="o">=</span> <span class="n">node</span><span class="o">.</span><span class="n">next</span>
</span><span class='line'>          <span class="n">l</span> <span class="o">+=</span> <span class="mi">1</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">st</span><span class="o">.</span><span class="n">empty?</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="n">test_list</span> <span class="o">=</span> <span class="no">List</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'><span class="n">test_list</span><span class="o">.</span><span class="n">next</span> <span class="o">=</span> <span class="no">List</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span>
</span><span class='line'><span class="n">test_list</span><span class="o">.</span><span class="n">next</span><span class="o">.</span><span class="n">next</span> <span class="o">=</span> <span class="no">List</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="mi">3</span><span class="p">)</span>
</span><span class='line'><span class="n">test_list</span><span class="o">.</span><span class="n">next</span><span class="o">.</span><span class="n">next</span><span class="o">.</span><span class="n">next</span> <span class="o">=</span> <span class="no">List</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span>
</span><span class='line'><span class="n">test_list</span><span class="o">.</span><span class="n">next</span><span class="o">.</span><span class="n">next</span><span class="o">.</span><span class="n">next</span><span class="o">.</span><span class="n">next</span> <span class="o">=</span> <span class="no">List</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="nb">p</span> <span class="n">test_list</span><span class="o">.</span><span class="n">is_palindrome</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Recursion - Find all subsets of given set]]></title>
    <link href="http://karthikselva.in/blog/2013/04/11/recursion-find-all-subsets-of-given-set/"/>
    <updated>2013-04-11T00:24:00-07:00</updated>
    <id>http://karthikselva.in/blog/2013/04/11/recursion-find-all-subsets-of-given-set</id>
    <content type="html"><![CDATA[<figure class='code'><figcaption><span>Subset ruby (subsets_of_set.rb)</span> <a href='http://karthikselva.in/downloads/code/subsets_of_set.rb'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="k">def</span> <span class="nf">get_first</span><span class="p">(</span><span class="n">str</span><span class="p">)</span>
</span><span class='line'>  <span class="n">str</span><span class="o">[</span><span class="mi">0</span><span class="o">.</span><span class="n">.</span><span class="mi">0</span><span class="o">]</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">exclude_first</span><span class="p">(</span><span class="n">str</span><span class="p">)</span>
</span><span class='line'>  <span class="n">str</span><span class="o">[</span><span class="mi">1</span><span class="o">.</span><span class="n">.</span><span class="o">-</span><span class="mi">1</span><span class="o">]</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">subsets</span><span class="p">(</span><span class="n">set</span><span class="p">)</span>
</span><span class='line'>  <span class="k">if</span> <span class="n">set</span><span class="o">.</span><span class="n">length</span> <span class="o">&gt;</span> <span class="mi">0</span>
</span><span class='line'>      <span class="n">all_sets</span> <span class="o">=</span> <span class="n">subsets</span><span class="p">(</span><span class="n">exclude_first</span><span class="p">(</span><span class="n">set</span><span class="p">))</span>
</span><span class='line'>      <span class="n">all_sets</span><span class="o">.</span><span class="n">clone</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">val</span><span class="o">|</span>
</span><span class='line'>          <span class="n">all_sets</span> <span class="o">&lt;&lt;</span> <span class="n">val</span><span class="o">+</span><span class="n">get_first</span><span class="p">(</span><span class="n">set</span><span class="p">)</span>
</span><span class='line'>      <span class="k">end</span>  
</span><span class='line'>      <span class="k">return</span> <span class="n">all_sets</span>
</span><span class='line'>  <span class="k">else</span>
</span><span class='line'>      <span class="k">return</span> <span class="o">[</span><span class="n">set</span><span class="o">]</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="n">subsets</span><span class="p">(</span><span class="s1">&#39;abcd&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">sort</span><span class="o">.</span><span class="n">inspect</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#Output:</span>
</span><span class='line'><span class="c1">#[&quot;&quot;, &quot;a&quot;, &quot;b&quot;, &quot;ba&quot;, &quot;c&quot;, &quot;ca&quot;, &quot;cb&quot;, &quot;cba&quot;, &quot;d&quot;, &quot;da&quot;, &quot;db&quot;, &quot;dba&quot;, &quot;dc&quot;, &quot;dca&quot;, &quot;dcb&quot;, &quot;dcba&quot;]</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Recursion - Child and Stair Jumping Problem]]></title>
    <link href="http://karthikselva.in/blog/2013/04/10/recursion-child-and-stair-jumping-problem/"/>
    <updated>2013-04-10T23:47:00-07:00</updated>
    <id>http://karthikselva.in/blog/2013/04/10/recursion-child-and-stair-jumping-problem</id>
    <content type="html"><![CDATA[<figure class='code'><figcaption><span>ChildStair ruby (child_and_stair.rb)</span> <a href='http://karthikselva.in/downloads/code/child_and_stair.rb'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="c1"># Child and Stairs </span>
</span><span class='line'><span class="k">def</span> <span class="nf">find_chances_for</span><span class="p">(</span><span class="n">n</span><span class="p">)</span>
</span><span class='line'>  <span class="k">if</span> <span class="n">n</span> <span class="o">&lt;</span> <span class="mi">0</span>
</span><span class='line'>      <span class="k">return</span> <span class="mi">0</span>
</span><span class='line'>  <span class="k">elsif</span> <span class="n">n</span> <span class="o">==</span> <span class="mi">0</span>
</span><span class='line'>      <span class="k">return</span> <span class="mi">1</span>
</span><span class='line'>  <span class="k">else</span>
</span><span class='line'>      <span class="k">return</span> <span class="p">(</span> <span class="n">find_chances_for</span><span class="p">(</span><span class="n">n</span><span class="o">-</span><span class="mi">3</span><span class="p">)</span> <span class="o">+</span>
</span><span class='line'>               <span class="n">find_chances_for</span><span class="p">(</span><span class="n">n</span><span class="o">-</span><span class="mi">2</span><span class="p">)</span> <span class="o">+</span>
</span><span class='line'>               <span class="n">find_chances_for</span><span class="p">(</span><span class="n">n</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="nb">p</span> <span class="n">find_chances_for</span><span class="p">(</span><span class="mi">3</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Output </span>
</span><span class='line'><span class="c1"># ------</span>
</span><span class='line'><span class="c1"># 4</span>
</span><span class='line'><span class="c1"># Explanation</span>
</span><span class='line'><span class="c1"># -----------</span>
</span><span class='line'><span class="c1"># They are </span>
</span><span class='line'><span class="c1"># (1,1,1)</span>
</span><span class='line'><span class="c1"># (1,2)</span>
</span><span class='line'><span class="c1"># (2,1)</span>
</span><span class='line'><span class="c1"># (3)</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Binary Tree - Find Vertical Sum]]></title>
    <link href="http://karthikselva.in/blog/2013/04/08/binary-tree-find-vertical-sum/"/>
    <updated>2013-04-08T20:01:00-07:00</updated>
    <id>http://karthikselva.in/blog/2013/04/08/binary-tree-find-vertical-sum</id>
    <content type="html"><![CDATA[<p><a href="http://www.geeksforgeeks.org/vertical-sum-in-a-given-binary-tree/">Original Source</a></p>

<figure class='code'><figcaption><span>VerticalSum ruby (vertical_sum.rb)</span> <a href='http://karthikselva.in/downloads/code/vertical_sum.rb'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="no">SUM</span> <span class="o">=</span> <span class="no">Hash</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'><span class="k">class</span> <span class="nc">Tree</span>
</span><span class='line'>  <span class="kp">attr_accessor</span> <span class="ss">:right</span> <span class="p">,</span> <span class="ss">:left</span> <span class="p">,</span> <span class="ss">:data</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">d</span><span class="p">,</span><span class="n">l</span><span class="p">,</span><span class="n">r</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@right</span> <span class="o">=</span> <span class="n">r</span>
</span><span class='line'>    <span class="vi">@left</span> <span class="o">=</span> <span class="n">l</span>
</span><span class='line'>    <span class="vi">@data</span> <span class="o">=</span> <span class="n">d</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">vertical_sums</span><span class="p">(</span><span class="n">node</span><span class="p">,</span><span class="n">dist</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>    <span class="k">if</span> <span class="o">!</span><span class="n">node</span><span class="o">.</span><span class="n">nil?</span>
</span><span class='line'>      <span class="no">SUM</span><span class="o">[</span><span class="n">dist</span><span class="o">]</span> <span class="o">+=</span> <span class="n">node</span><span class="o">.</span><span class="n">data</span>
</span><span class='line'>      <span class="n">vertical_sums</span><span class="p">(</span><span class="n">node</span><span class="o">.</span><span class="n">left</span><span class="p">,</span><span class="n">dist</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'>      <span class="n">vertical_sums</span><span class="p">(</span><span class="n">node</span><span class="o">.</span><span class="n">right</span><span class="p">,</span><span class="n">dist</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">test_tree</span> <span class="o">=</span> <span class="no">Tree</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span><span class="no">Tree</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="no">Tree</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="kp">nil</span><span class="p">,</span><span class="kp">nil</span><span class="p">),</span><span class="no">Tree</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="kp">nil</span><span class="p">,</span><span class="kp">nil</span><span class="p">)),</span>
</span><span class='line'>        <span class="no">Tree</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="mi">7</span><span class="p">,</span><span class="no">Tree</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="mi">6</span><span class="p">,</span><span class="kp">nil</span><span class="p">,</span><span class="kp">nil</span><span class="p">),</span><span class="no">Tree</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="mi">8</span><span class="p">,</span><span class="kp">nil</span><span class="p">,</span><span class="kp">nil</span><span class="p">)))</span>
</span><span class='line'>
</span><span class='line'><span class="n">test_tree</span><span class="o">.</span><span class="n">vertical_sums</span><span class="p">(</span><span class="n">test_tree</span><span class="p">)</span>
</span><span class='line'><span class="nb">puts</span> <span class="no">SUM</span><span class="o">.</span><span class="n">inspect</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Output:</span>
</span><span class='line'><span class="c1"># {0=&gt;15, -1=&gt;3, -2=&gt;1, 1=&gt;7, 2=&gt;8}</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
</feed>
